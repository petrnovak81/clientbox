'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Manual changes to this file may cause unexpected behavior in your application.
'     Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class Data4995Entities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=Data4995Entities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property AG_tblRoles() As DbSet(Of AG_tblRoles)
    Public Overridable Property AG_tblSignalRUsers() As DbSet(Of AG_tblSignalRUsers)
    Public Overridable Property AGvw_FirmyAdresyFakturacni() As DbSet(Of AGvw_FirmyAdresyFakturacni)
    Public Overridable Property AGvw_FirmyAPobocky() As DbSet(Of AGvw_FirmyAPobocky)
    Public Overridable Property AGvw_FirmyDodavatele() As DbSet(Of AGvw_FirmyDodavatele)
    Public Overridable Property AGvw_FirmyOdberatele() As DbSet(Of AGvw_FirmyOdberatele)
    Public Overridable Property AGvw_FirmyPobocky() As DbSet(Of AGvw_FirmyPobocky)
    Public Overridable Property AGvw_KatalogProduktySProvizi() As DbSet(Of AGvw_KatalogProduktySProvizi)
    Public Overridable Property AGvwrr_DeadLine() As DbSet(Of AGvwrr_DeadLine)
    Public Overridable Property AGvwrr_Dodavatel() As DbSet(Of AGvwrr_Dodavatel)
    Public Overridable Property AGvwrr_FakturovatNaFirmu() As DbSet(Of AGvwrr_FakturovatNaFirmu)
    Public Overridable Property AGvwrr_ProduktTypZaznamu() As DbSet(Of AGvwrr_ProduktTypZaznamu)
    Public Overridable Property AGvwrr_StavObjednavky() As DbSet(Of AGvwrr_StavObjednavky)
    Public Overridable Property AGvwrr_StavPracaku() As DbSet(Of AGvwrr_StavPracaku)
    Public Overridable Property AGvwrr_TaskStav() As DbSet(Of AGvwrr_TaskStav)
    Public Overridable Property AGvwrr_TypAdresy() As DbSet(Of AGvwrr_TypAdresy)
    Public Overridable Property AGvwrr_TypPolozkyPracaku() As DbSet(Of AGvwrr_TypPolozkyPracaku)
    Public Overridable Property AGvwrr_TypServisniSmlouvy() As DbSet(Of AGvwrr_TypServisniSmlouvy)
    Public Overridable Property AGvwrr_TypykontaktnichUdaju() As DbSet(Of AGvwrr_TypykontaktnichUdaju)
    Public Overridable Property AG_tblRegisterRestrictions() As DbSet(Of AG_tblRegisterRestrictions)
    Public Overridable Property AG_tblUsersLastPosition() As DbSet(Of AG_tblUsersLastPosition)
    Public Overridable Property AGvw_FA_PracakySeznam() As DbSet(Of AGvw_FA_PracakySeznam)
    Public Overridable Property AG_tblUsers() As DbSet(Of AG_tblUsers)
    Public Overridable Property AGvwrr_TypSSProvize() As DbSet(Of AGvwrr_TypSSProvize)
    Public Overridable Property AGvwrr_IntervalFakturaceSS() As DbSet(Of AGvwrr_IntervalFakturaceSS)
    Public Overridable Property AG_tblIBBakovniUcty() As DbSet(Of AG_tblIBBakovniUcty)
    Public Overridable Property AGvwrr_BackupFilterProfile() As DbSet(Of AGvwrr_BackupFilterProfile)

    Public Overridable Function AGsp_AddEditTask(iDTask As Nullable(Of Integer), iDUserResitel As Nullable(Of Integer), rr_DeadLine As Nullable(Of Byte), datumDeadLine As Nullable(Of Date), predmet As String, telo As String, rr_TaskStav As Nullable(Of Byte)) As Integer
        Dim iDTaskParameter As ObjectParameter = If(iDTask.HasValue, New ObjectParameter("IDTask", iDTask), New ObjectParameter("IDTask", GetType(Integer)))

        Dim iDUserResitelParameter As ObjectParameter = If(iDUserResitel.HasValue, New ObjectParameter("IDUserResitel", iDUserResitel), New ObjectParameter("IDUserResitel", GetType(Integer)))

        Dim rr_DeadLineParameter As ObjectParameter = If(rr_DeadLine.HasValue, New ObjectParameter("rr_DeadLine", rr_DeadLine), New ObjectParameter("rr_DeadLine", GetType(Byte)))

        Dim datumDeadLineParameter As ObjectParameter = If(datumDeadLine.HasValue, New ObjectParameter("DatumDeadLine", datumDeadLine), New ObjectParameter("DatumDeadLine", GetType(Date)))

        Dim predmetParameter As ObjectParameter = If(predmet IsNot Nothing, New ObjectParameter("Predmet", predmet), New ObjectParameter("Predmet", GetType(String)))

        Dim teloParameter As ObjectParameter = If(telo IsNot Nothing, New ObjectParameter("Telo", telo), New ObjectParameter("Telo", GetType(String)))

        Dim rr_TaskStavParameter As ObjectParameter = If(rr_TaskStav.HasValue, New ObjectParameter("rr_TaskStav", rr_TaskStav), New ObjectParameter("rr_TaskStav", GetType(Byte)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddEditTask", iDTaskParameter, iDUserResitelParameter, rr_DeadLineParameter, datumDeadLineParameter, predmetParameter, teloParameter, rr_TaskStavParameter)
    End Function

    Public Overridable Function AGsp_AddFirmaInventarFoto(iDInventare As Nullable(Of Integer), filePath As String) As Integer
        Dim iDInventareParameter As ObjectParameter = If(iDInventare.HasValue, New ObjectParameter("IDInventare", iDInventare), New ObjectParameter("IDInventare", GetType(Integer)))

        Dim filePathParameter As ObjectParameter = If(filePath IsNot Nothing, New ObjectParameter("FilePath", filePath), New ObjectParameter("FilePath", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddFirmaInventarFoto", iDInventareParameter, filePathParameter)
    End Function

    Public Overridable Function AGsp_AddNewFirma(firma As String, nazev_firmy As String, telefon_1 As String, telefon_2 As String, e_mail As String, iCO As String, dIC As String, obor_cinnosti As String, poznamky As String, titul As String, krestni As String, prijmeni As String, funkce As String, zasilat As String, iCZ As String) As Integer
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim nazev_firmyParameter As ObjectParameter = If(nazev_firmy IsNot Nothing, New ObjectParameter("Nazev_firmy", nazev_firmy), New ObjectParameter("Nazev_firmy", GetType(String)))

        Dim telefon_1Parameter As ObjectParameter = If(telefon_1 IsNot Nothing, New ObjectParameter("Telefon_1", telefon_1), New ObjectParameter("Telefon_1", GetType(String)))

        Dim telefon_2Parameter As ObjectParameter = If(telefon_2 IsNot Nothing, New ObjectParameter("Telefon_2", telefon_2), New ObjectParameter("Telefon_2", GetType(String)))

        Dim e_mailParameter As ObjectParameter = If(e_mail IsNot Nothing, New ObjectParameter("E_mail", e_mail), New ObjectParameter("E_mail", GetType(String)))

        Dim iCOParameter As ObjectParameter = If(iCO IsNot Nothing, New ObjectParameter("ICO", iCO), New ObjectParameter("ICO", GetType(String)))

        Dim dICParameter As ObjectParameter = If(dIC IsNot Nothing, New ObjectParameter("DIC", dIC), New ObjectParameter("DIC", GetType(String)))

        Dim obor_cinnostiParameter As ObjectParameter = If(obor_cinnosti IsNot Nothing, New ObjectParameter("Obor_cinnosti", obor_cinnosti), New ObjectParameter("Obor_cinnosti", GetType(String)))

        Dim poznamkyParameter As ObjectParameter = If(poznamky IsNot Nothing, New ObjectParameter("Poznamky", poznamky), New ObjectParameter("Poznamky", GetType(String)))

        Dim titulParameter As ObjectParameter = If(titul IsNot Nothing, New ObjectParameter("Titul", titul), New ObjectParameter("Titul", GetType(String)))

        Dim krestniParameter As ObjectParameter = If(krestni IsNot Nothing, New ObjectParameter("Krestni", krestni), New ObjectParameter("Krestni", GetType(String)))

        Dim prijmeniParameter As ObjectParameter = If(prijmeni IsNot Nothing, New ObjectParameter("Prijmeni", prijmeni), New ObjectParameter("Prijmeni", GetType(String)))

        Dim funkceParameter As ObjectParameter = If(funkce IsNot Nothing, New ObjectParameter("Funkce", funkce), New ObjectParameter("Funkce", GetType(String)))

        Dim zasilatParameter As ObjectParameter = If(zasilat IsNot Nothing, New ObjectParameter("Zasilat", zasilat), New ObjectParameter("Zasilat", GetType(String)))

        Dim iCZParameter As ObjectParameter = If(iCZ IsNot Nothing, New ObjectParameter("ICZ", iCZ), New ObjectParameter("ICZ", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddNewFirma", firmaParameter, nazev_firmyParameter, telefon_1Parameter, telefon_2Parameter, e_mailParameter, iCOParameter, dICParameter, obor_cinnostiParameter, poznamkyParameter, titulParameter, krestniParameter, prijmeniParameter, funkceParameter, zasilatParameter, iCZParameter)
    End Function

    Public Overridable Function AGsp_AddNewFirmaParametry(firma As String, iDUser As Nullable(Of Integer)) As Integer
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddNewFirmaParametry", firmaParameter, iDUserParameter)
    End Function

    Public Overridable Function AGsp_AddNewFirmy_adresy(kontakt As String, nazev_adresy As String, ulice_rozpis As String, pSC_rozpis As String, mesto_rozpis As String) As Integer
        Dim kontaktParameter As ObjectParameter = If(kontakt IsNot Nothing, New ObjectParameter("Kontakt", kontakt), New ObjectParameter("Kontakt", GetType(String)))

        Dim nazev_adresyParameter As ObjectParameter = If(nazev_adresy IsNot Nothing, New ObjectParameter("Nazev_adresy", nazev_adresy), New ObjectParameter("Nazev_adresy", GetType(String)))

        Dim ulice_rozpisParameter As ObjectParameter = If(ulice_rozpis IsNot Nothing, New ObjectParameter("Ulice_rozpis", ulice_rozpis), New ObjectParameter("Ulice_rozpis", GetType(String)))

        Dim pSC_rozpisParameter As ObjectParameter = If(pSC_rozpis IsNot Nothing, New ObjectParameter("PSC_rozpis", pSC_rozpis), New ObjectParameter("PSC_rozpis", GetType(String)))

        Dim mesto_rozpisParameter As ObjectParameter = If(mesto_rozpis IsNot Nothing, New ObjectParameter("Mesto_rozpis", mesto_rozpis), New ObjectParameter("Mesto_rozpis", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddNewFirmy_adresy", kontaktParameter, nazev_adresyParameter, ulice_rozpisParameter, pSC_rozpisParameter, mesto_rozpisParameter)
    End Function

    Public Overridable Function AGsp_AddNewOrEditProduktProcentoProvize(iDProduktProvize As Nullable(Of Integer), iDUser As Nullable(Of Integer), produkt As String, procentoProvize As Nullable(Of Decimal)) As Integer
        Dim iDProduktProvizeParameter As ObjectParameter = If(iDProduktProvize.HasValue, New ObjectParameter("IDProduktProvize", iDProduktProvize), New ObjectParameter("IDProduktProvize", GetType(Integer)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim produktParameter As ObjectParameter = If(produkt IsNot Nothing, New ObjectParameter("Produkt", produkt), New ObjectParameter("Produkt", GetType(String)))

        Dim procentoProvizeParameter As ObjectParameter = If(procentoProvize.HasValue, New ObjectParameter("ProcentoProvize", procentoProvize), New ObjectParameter("ProcentoProvize", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddNewOrEditProduktProcentoProvize", iDProduktProvizeParameter, iDUserParameter, produktParameter, procentoProvizeParameter)
    End Function

    Public Overridable Function AGsp_AddNewTask(iDUserZadal As Nullable(Of Integer), iDUserResitel As Nullable(Of Integer), datumResitelPrevzal As Nullable(Of Date), rr_DeadLine As Nullable(Of Byte), datumDeadLine As Nullable(Of Date), predmet As String, telo As String, rr_TaskStav As Nullable(Of Byte)) As Integer
        Dim iDUserZadalParameter As ObjectParameter = If(iDUserZadal.HasValue, New ObjectParameter("IDUserZadal", iDUserZadal), New ObjectParameter("IDUserZadal", GetType(Integer)))

        Dim iDUserResitelParameter As ObjectParameter = If(iDUserResitel.HasValue, New ObjectParameter("IDUserResitel", iDUserResitel), New ObjectParameter("IDUserResitel", GetType(Integer)))

        Dim datumResitelPrevzalParameter As ObjectParameter = If(datumResitelPrevzal.HasValue, New ObjectParameter("DatumResitelPrevzal", datumResitelPrevzal), New ObjectParameter("DatumResitelPrevzal", GetType(Date)))

        Dim rr_DeadLineParameter As ObjectParameter = If(rr_DeadLine.HasValue, New ObjectParameter("rr_DeadLine", rr_DeadLine), New ObjectParameter("rr_DeadLine", GetType(Byte)))

        Dim datumDeadLineParameter As ObjectParameter = If(datumDeadLine.HasValue, New ObjectParameter("DatumDeadLine", datumDeadLine), New ObjectParameter("DatumDeadLine", GetType(Date)))

        Dim predmetParameter As ObjectParameter = If(predmet IsNot Nothing, New ObjectParameter("Predmet", predmet), New ObjectParameter("Predmet", GetType(String)))

        Dim teloParameter As ObjectParameter = If(telo IsNot Nothing, New ObjectParameter("Telo", telo), New ObjectParameter("Telo", GetType(String)))

        Dim rr_TaskStavParameter As ObjectParameter = If(rr_TaskStav.HasValue, New ObjectParameter("rr_TaskStav", rr_TaskStav), New ObjectParameter("rr_TaskStav", GetType(Byte)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddNewTask", iDUserZadalParameter, iDUserResitelParameter, datumResitelPrevzalParameter, rr_DeadLineParameter, datumDeadLineParameter, predmetParameter, teloParameter, rr_TaskStavParameter)
    End Function

    Public Overridable Function AGsp_AddNewTaskHistorie(iDTask As Nullable(Of Integer), rr_TaskKrok As Nullable(Of Byte), iDUserTaskNovyResitel As Nullable(Of Integer)) As Integer
        Dim iDTaskParameter As ObjectParameter = If(iDTask.HasValue, New ObjectParameter("IDTask", iDTask), New ObjectParameter("IDTask", GetType(Integer)))

        Dim rr_TaskKrokParameter As ObjectParameter = If(rr_TaskKrok.HasValue, New ObjectParameter("rr_TaskKrok", rr_TaskKrok), New ObjectParameter("rr_TaskKrok", GetType(Byte)))

        Dim iDUserTaskNovyResitelParameter As ObjectParameter = If(iDUserTaskNovyResitel.HasValue, New ObjectParameter("IDUserTaskNovyResitel", iDUserTaskNovyResitel), New ObjectParameter("IDUserTaskNovyResitel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddNewTaskHistorie", iDTaskParameter, rr_TaskKrokParameter, iDUserTaskNovyResitelParameter)
    End Function

    Public Overridable Function AGsp_AddNewVykazPrace(firma As String, iDUser As Nullable(Of Integer), iDVykazPrace As ObjectParameter) As Integer
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddNewVykazPrace", firmaParameter, iDUserParameter, iDVykazPrace)
    End Function

    Public Overridable Function AGsp_AddOrEditFirmyInventar(iDInventare As Nullable(Of Integer), firma As String, inventarPopis As String, inventarProdukt As String, datumNaposledyZakoupeno As Nullable(Of Date), rr_TypInventare As Nullable(Of Short), datumExpirace As Nullable(Of Date), newIDInventare As ObjectParameter) As Integer
        Dim iDInventareParameter As ObjectParameter = If(iDInventare.HasValue, New ObjectParameter("IDInventare", iDInventare), New ObjectParameter("IDInventare", GetType(Integer)))

        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim inventarPopisParameter As ObjectParameter = If(inventarPopis IsNot Nothing, New ObjectParameter("InventarPopis", inventarPopis), New ObjectParameter("InventarPopis", GetType(String)))

        Dim inventarProduktParameter As ObjectParameter = If(inventarProdukt IsNot Nothing, New ObjectParameter("InventarProdukt", inventarProdukt), New ObjectParameter("InventarProdukt", GetType(String)))

        Dim datumNaposledyZakoupenoParameter As ObjectParameter = If(datumNaposledyZakoupeno.HasValue, New ObjectParameter("DatumNaposledyZakoupeno", datumNaposledyZakoupeno), New ObjectParameter("DatumNaposledyZakoupeno", GetType(Date)))

        Dim rr_TypInventareParameter As ObjectParameter = If(rr_TypInventare.HasValue, New ObjectParameter("rr_TypInventare", rr_TypInventare), New ObjectParameter("rr_TypInventare", GetType(Short)))

        Dim datumExpiraceParameter As ObjectParameter = If(datumExpirace.HasValue, New ObjectParameter("DatumExpirace", datumExpirace), New ObjectParameter("DatumExpirace", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddOrEditFirmyInventar", iDInventareParameter, firmaParameter, inventarPopisParameter, inventarProduktParameter, datumNaposledyZakoupenoParameter, rr_TypInventareParameter, datumExpiraceParameter, newIDInventare)
    End Function

    Public Overridable Function AGsp_AddOrEditFirmyKontaktniudaje(kontakt As String, kontaktni_udaj As Nullable(Of Short), rr_TypykontaktnichUdaju As String, nazev_KU As String, hodnota_KU As String) As Integer
        Dim kontaktParameter As ObjectParameter = If(kontakt IsNot Nothing, New ObjectParameter("Kontakt", kontakt), New ObjectParameter("Kontakt", GetType(String)))

        Dim kontaktni_udajParameter As ObjectParameter = If(kontaktni_udaj.HasValue, New ObjectParameter("Kontaktni_udaj", kontaktni_udaj), New ObjectParameter("Kontaktni_udaj", GetType(Short)))

        Dim rr_TypykontaktnichUdajuParameter As ObjectParameter = If(rr_TypykontaktnichUdaju IsNot Nothing, New ObjectParameter("rr_TypykontaktnichUdaju", rr_TypykontaktnichUdaju), New ObjectParameter("rr_TypykontaktnichUdaju", GetType(String)))

        Dim nazev_KUParameter As ObjectParameter = If(nazev_KU IsNot Nothing, New ObjectParameter("Nazev_KU", nazev_KU), New ObjectParameter("Nazev_KU", GetType(String)))

        Dim hodnota_KUParameter As ObjectParameter = If(hodnota_KU IsNot Nothing, New ObjectParameter("Hodnota_KU", hodnota_KU), New ObjectParameter("Hodnota_KU", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddOrEditFirmyKontaktniudaje", kontaktParameter, kontaktni_udajParameter, rr_TypykontaktnichUdajuParameter, nazev_KUParameter, hodnota_KUParameter)
    End Function

    Public Overridable Function AGsp_AddOrEditFirmyObjednavka(iDObjednavkyPol As Nullable(Of Integer), firmaObjednal As String, produkt As String, poznamka As String, objednanoEMJ As Nullable(Of Decimal), domluvenaProdejniCena As Nullable(Of Decimal), rr_DeadLine As Nullable(Of Short), deadLineDatum As Nullable(Of Date), iDUserObjednal As Nullable(Of Integer), datumObjednano As Nullable(Of Date), radioObjednat As Nullable(Of Boolean), radioObjednano As Nullable(Of Boolean), radioZrusit As Nullable(Of Boolean), oK As ObjectParameter, zprava As ObjectParameter) As Integer
        Dim iDObjednavkyPolParameter As ObjectParameter = If(iDObjednavkyPol.HasValue, New ObjectParameter("IDObjednavkyPol", iDObjednavkyPol), New ObjectParameter("IDObjednavkyPol", GetType(Integer)))

        Dim firmaObjednalParameter As ObjectParameter = If(firmaObjednal IsNot Nothing, New ObjectParameter("FirmaObjednal", firmaObjednal), New ObjectParameter("FirmaObjednal", GetType(String)))

        Dim produktParameter As ObjectParameter = If(produkt IsNot Nothing, New ObjectParameter("Produkt", produkt), New ObjectParameter("Produkt", GetType(String)))

        Dim poznamkaParameter As ObjectParameter = If(poznamka IsNot Nothing, New ObjectParameter("Poznamka", poznamka), New ObjectParameter("Poznamka", GetType(String)))

        Dim objednanoEMJParameter As ObjectParameter = If(objednanoEMJ.HasValue, New ObjectParameter("ObjednanoEMJ", objednanoEMJ), New ObjectParameter("ObjednanoEMJ", GetType(Decimal)))

        Dim domluvenaProdejniCenaParameter As ObjectParameter = If(domluvenaProdejniCena.HasValue, New ObjectParameter("DomluvenaProdejniCena", domluvenaProdejniCena), New ObjectParameter("DomluvenaProdejniCena", GetType(Decimal)))

        Dim rr_DeadLineParameter As ObjectParameter = If(rr_DeadLine.HasValue, New ObjectParameter("rr_DeadLine", rr_DeadLine), New ObjectParameter("rr_DeadLine", GetType(Short)))

        Dim deadLineDatumParameter As ObjectParameter = If(deadLineDatum.HasValue, New ObjectParameter("DeadLineDatum", deadLineDatum), New ObjectParameter("DeadLineDatum", GetType(Date)))

        Dim iDUserObjednalParameter As ObjectParameter = If(iDUserObjednal.HasValue, New ObjectParameter("IDUserObjednal", iDUserObjednal), New ObjectParameter("IDUserObjednal", GetType(Integer)))

        Dim datumObjednanoParameter As ObjectParameter = If(datumObjednano.HasValue, New ObjectParameter("DatumObjednano", datumObjednano), New ObjectParameter("DatumObjednano", GetType(Date)))

        Dim radioObjednatParameter As ObjectParameter = If(radioObjednat.HasValue, New ObjectParameter("RadioObjednat", radioObjednat), New ObjectParameter("RadioObjednat", GetType(Boolean)))

        Dim radioObjednanoParameter As ObjectParameter = If(radioObjednano.HasValue, New ObjectParameter("RadioObjednano", radioObjednano), New ObjectParameter("RadioObjednano", GetType(Boolean)))

        Dim radioZrusitParameter As ObjectParameter = If(radioZrusit.HasValue, New ObjectParameter("RadioZrusit", radioZrusit), New ObjectParameter("RadioZrusit", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddOrEditFirmyObjednavka", iDObjednavkyPolParameter, firmaObjednalParameter, produktParameter, poznamkaParameter, objednanoEMJParameter, domluvenaProdejniCenaParameter, rr_DeadLineParameter, deadLineDatumParameter, iDUserObjednalParameter, datumObjednanoParameter, radioObjednatParameter, radioObjednanoParameter, radioZrusitParameter, oK, zprava)
    End Function

    Public Overridable Function AGsp_AddOrEditNewFirmy_adresy(kontakt As String, cislo_adresy As Nullable(Of Short), nazev_adresy As String, ulice_rozpis As String, pSC_rozpis As String, mesto_rozpis As String) As Integer
        Dim kontaktParameter As ObjectParameter = If(kontakt IsNot Nothing, New ObjectParameter("Kontakt", kontakt), New ObjectParameter("Kontakt", GetType(String)))

        Dim cislo_adresyParameter As ObjectParameter = If(cislo_adresy.HasValue, New ObjectParameter("Cislo_adresy", cislo_adresy), New ObjectParameter("Cislo_adresy", GetType(Short)))

        Dim nazev_adresyParameter As ObjectParameter = If(nazev_adresy IsNot Nothing, New ObjectParameter("Nazev_adresy", nazev_adresy), New ObjectParameter("Nazev_adresy", GetType(String)))

        Dim ulice_rozpisParameter As ObjectParameter = If(ulice_rozpis IsNot Nothing, New ObjectParameter("Ulice_rozpis", ulice_rozpis), New ObjectParameter("Ulice_rozpis", GetType(String)))

        Dim pSC_rozpisParameter As ObjectParameter = If(pSC_rozpis IsNot Nothing, New ObjectParameter("PSC_rozpis", pSC_rozpis), New ObjectParameter("PSC_rozpis", GetType(String)))

        Dim mesto_rozpisParameter As ObjectParameter = If(mesto_rozpis IsNot Nothing, New ObjectParameter("Mesto_rozpis", mesto_rozpis), New ObjectParameter("Mesto_rozpis", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddOrEditNewFirmy_adresy", kontaktParameter, cislo_adresyParameter, nazev_adresyParameter, ulice_rozpisParameter, pSC_rozpisParameter, mesto_rozpisParameter)
    End Function

    Public Overridable Function AGsp_AddOrEditPracoviste(firma As String, rr_TypAdresy As String, nazev_firmy As String, ulice As String, pSC As String, mesto As String, vzdalenost As Nullable(Of Short), telefon_1 As String, telefon_2 As String, e_mail As String, poznamky As String, nadrizena_firma As String, titul As String, krestni As String, prijmeni As String, funkce As String, zasilat As String) As Integer
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim rr_TypAdresyParameter As ObjectParameter = If(rr_TypAdresy IsNot Nothing, New ObjectParameter("rr_TypAdresy", rr_TypAdresy), New ObjectParameter("rr_TypAdresy", GetType(String)))

        Dim nazev_firmyParameter As ObjectParameter = If(nazev_firmy IsNot Nothing, New ObjectParameter("Nazev_firmy", nazev_firmy), New ObjectParameter("Nazev_firmy", GetType(String)))

        Dim uliceParameter As ObjectParameter = If(ulice IsNot Nothing, New ObjectParameter("Ulice", ulice), New ObjectParameter("Ulice", GetType(String)))

        Dim pSCParameter As ObjectParameter = If(pSC IsNot Nothing, New ObjectParameter("PSC", pSC), New ObjectParameter("PSC", GetType(String)))

        Dim mestoParameter As ObjectParameter = If(mesto IsNot Nothing, New ObjectParameter("Mesto", mesto), New ObjectParameter("Mesto", GetType(String)))

        Dim vzdalenostParameter As ObjectParameter = If(vzdalenost.HasValue, New ObjectParameter("Vzdalenost", vzdalenost), New ObjectParameter("Vzdalenost", GetType(Short)))

        Dim telefon_1Parameter As ObjectParameter = If(telefon_1 IsNot Nothing, New ObjectParameter("Telefon_1", telefon_1), New ObjectParameter("Telefon_1", GetType(String)))

        Dim telefon_2Parameter As ObjectParameter = If(telefon_2 IsNot Nothing, New ObjectParameter("Telefon_2", telefon_2), New ObjectParameter("Telefon_2", GetType(String)))

        Dim e_mailParameter As ObjectParameter = If(e_mail IsNot Nothing, New ObjectParameter("E_mail", e_mail), New ObjectParameter("E_mail", GetType(String)))

        Dim poznamkyParameter As ObjectParameter = If(poznamky IsNot Nothing, New ObjectParameter("Poznamky", poznamky), New ObjectParameter("Poznamky", GetType(String)))

        Dim nadrizena_firmaParameter As ObjectParameter = If(nadrizena_firma IsNot Nothing, New ObjectParameter("Nadrizena_firma", nadrizena_firma), New ObjectParameter("Nadrizena_firma", GetType(String)))

        Dim titulParameter As ObjectParameter = If(titul IsNot Nothing, New ObjectParameter("Titul", titul), New ObjectParameter("Titul", GetType(String)))

        Dim krestniParameter As ObjectParameter = If(krestni IsNot Nothing, New ObjectParameter("Krestni", krestni), New ObjectParameter("Krestni", GetType(String)))

        Dim prijmeniParameter As ObjectParameter = If(prijmeni IsNot Nothing, New ObjectParameter("Prijmeni", prijmeni), New ObjectParameter("Prijmeni", GetType(String)))

        Dim funkceParameter As ObjectParameter = If(funkce IsNot Nothing, New ObjectParameter("Funkce", funkce), New ObjectParameter("Funkce", GetType(String)))

        Dim zasilatParameter As ObjectParameter = If(zasilat IsNot Nothing, New ObjectParameter("Zasilat", zasilat), New ObjectParameter("Zasilat", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddOrEditPracoviste", firmaParameter, rr_TypAdresyParameter, nazev_firmyParameter, uliceParameter, pSCParameter, mestoParameter, vzdalenostParameter, telefon_1Parameter, telefon_2Parameter, e_mailParameter, poznamkyParameter, nadrizena_firmaParameter, titulParameter, krestniParameter, prijmeniParameter, funkceParameter, zasilatParameter)
    End Function

    Public Overridable Function AGsp_AddProduktNaskladnit(produkt As String, datumPrijmu As Nullable(Of Date), naskladnenoEMJ As Nullable(Of Decimal), cenaNakup As Nullable(Of Decimal), cenaProdejni As Nullable(Of Decimal), vSPrijmovehoDokladu As String, pochaziZIDObjednavkyPol As Nullable(Of Integer), iDUserNaskladnil As Nullable(Of Integer), iDMega As Nullable(Of Long), iDPrijemkaPolNEW As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim produktParameter As ObjectParameter = If(produkt IsNot Nothing, New ObjectParameter("Produkt", produkt), New ObjectParameter("Produkt", GetType(String)))

        Dim datumPrijmuParameter As ObjectParameter = If(datumPrijmu.HasValue, New ObjectParameter("DatumPrijmu", datumPrijmu), New ObjectParameter("DatumPrijmu", GetType(Date)))

        Dim naskladnenoEMJParameter As ObjectParameter = If(naskladnenoEMJ.HasValue, New ObjectParameter("NaskladnenoEMJ", naskladnenoEMJ), New ObjectParameter("NaskladnenoEMJ", GetType(Decimal)))

        Dim cenaNakupParameter As ObjectParameter = If(cenaNakup.HasValue, New ObjectParameter("CenaNakup", cenaNakup), New ObjectParameter("CenaNakup", GetType(Decimal)))

        Dim cenaProdejniParameter As ObjectParameter = If(cenaProdejni.HasValue, New ObjectParameter("CenaProdejni", cenaProdejni), New ObjectParameter("CenaProdejni", GetType(Decimal)))

        Dim vSPrijmovehoDokladuParameter As ObjectParameter = If(vSPrijmovehoDokladu IsNot Nothing, New ObjectParameter("VSPrijmovehoDokladu", vSPrijmovehoDokladu), New ObjectParameter("VSPrijmovehoDokladu", GetType(String)))

        Dim pochaziZIDObjednavkyPolParameter As ObjectParameter = If(pochaziZIDObjednavkyPol.HasValue, New ObjectParameter("PochaziZIDObjednavkyPol", pochaziZIDObjednavkyPol), New ObjectParameter("PochaziZIDObjednavkyPol", GetType(Integer)))

        Dim iDUserNaskladnilParameter As ObjectParameter = If(iDUserNaskladnil.HasValue, New ObjectParameter("IDUserNaskladnil", iDUserNaskladnil), New ObjectParameter("IDUserNaskladnil", GetType(Integer)))

        Dim iDMegaParameter As ObjectParameter = If(iDMega.HasValue, New ObjectParameter("IDMega", iDMega), New ObjectParameter("IDMega", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddProduktNaskladnit", produktParameter, datumPrijmuParameter, naskladnenoEMJParameter, cenaNakupParameter, cenaProdejniParameter, vSPrijmovehoDokladuParameter, pochaziZIDObjednavkyPolParameter, iDUserNaskladnilParameter, iDMegaParameter, iDPrijemkaPolNEW, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_AddProduktZbozi(produkt As String, popis As String, carovy_kod As String, jednotky As String, dodavatel As String, cenaProdejni As Nullable(Of Decimal), mnozstvi_minimalni As Nullable(Of Decimal), internet As String, poznamka As String, zarazeni As String, povedloSe As ObjectParameter, hlaseni As ObjectParameter) As Integer
        Dim produktParameter As ObjectParameter = If(produkt IsNot Nothing, New ObjectParameter("Produkt", produkt), New ObjectParameter("Produkt", GetType(String)))

        Dim popisParameter As ObjectParameter = If(popis IsNot Nothing, New ObjectParameter("Popis", popis), New ObjectParameter("Popis", GetType(String)))

        Dim carovy_kodParameter As ObjectParameter = If(carovy_kod IsNot Nothing, New ObjectParameter("Carovy_kod", carovy_kod), New ObjectParameter("Carovy_kod", GetType(String)))

        Dim jednotkyParameter As ObjectParameter = If(jednotky IsNot Nothing, New ObjectParameter("Jednotky", jednotky), New ObjectParameter("Jednotky", GetType(String)))

        Dim dodavatelParameter As ObjectParameter = If(dodavatel IsNot Nothing, New ObjectParameter("Dodavatel", dodavatel), New ObjectParameter("Dodavatel", GetType(String)))

        Dim cenaProdejniParameter As ObjectParameter = If(cenaProdejni.HasValue, New ObjectParameter("CenaProdejni", cenaProdejni), New ObjectParameter("CenaProdejni", GetType(Decimal)))

        Dim mnozstvi_minimalniParameter As ObjectParameter = If(mnozstvi_minimalni.HasValue, New ObjectParameter("Mnozstvi_minimalni", mnozstvi_minimalni), New ObjectParameter("Mnozstvi_minimalni", GetType(Decimal)))

        Dim internetParameter As ObjectParameter = If(internet IsNot Nothing, New ObjectParameter("Internet", internet), New ObjectParameter("Internet", GetType(String)))

        Dim poznamkaParameter As ObjectParameter = If(poznamka IsNot Nothing, New ObjectParameter("Poznamka", poznamka), New ObjectParameter("Poznamka", GetType(String)))

        Dim zarazeniParameter As ObjectParameter = If(zarazeni IsNot Nothing, New ObjectParameter("Zarazeni", zarazeni), New ObjectParameter("Zarazeni", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddProduktZbozi", produktParameter, popisParameter, carovy_kodParameter, jednotkyParameter, dodavatelParameter, cenaProdejniParameter, mnozstvi_minimalniParameter, internetParameter, poznamkaParameter, zarazeniParameter, povedloSe, hlaseni)
    End Function

    Public Overridable Function AGsp_DefaultAddPracoviste(firma As String, firmaPracoviste As ObjectParameter, rr_TypAdresy As ObjectParameter, nazev_firmy As ObjectParameter) As Integer
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_DefaultAddPracoviste", firmaParameter, firmaPracoviste, rr_TypAdresy, nazev_firmy)
    End Function

    Public Overridable Function AGsp_DelFirmaInventarFoto(iDFoto As Nullable(Of Integer)) As Integer
        Dim iDFotoParameter As ObjectParameter = If(iDFoto.HasValue, New ObjectParameter("IDFoto", iDFoto), New ObjectParameter("IDFoto", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_DelFirmaInventarFoto", iDFotoParameter)
    End Function

    Public Overridable Function AGsp_DelVykazPracePol(iDVykazPracePol As Nullable(Of Integer), oK As ObjectParameter, zprava As ObjectParameter) As Integer
        Dim iDVykazPracePolParameter As ObjectParameter = If(iDVykazPracePol.HasValue, New ObjectParameter("IDVykazPracePol", iDVykazPracePol), New ObjectParameter("IDVykazPracePol", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_DelVykazPracePol", iDVykazPracePolParameter, oK, zprava)
    End Function

    Public Overridable Function AGsp_Do_FA_FakturovatNa(iDVykazPrace As Nullable(Of Integer), rr_FakturovatNaFirmu As Nullable(Of Short), datumZasahu As Nullable(Of Date)) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Dim rr_FakturovatNaFirmuParameter As ObjectParameter = If(rr_FakturovatNaFirmu.HasValue, New ObjectParameter("rr_FakturovatNaFirmu", rr_FakturovatNaFirmu), New ObjectParameter("rr_FakturovatNaFirmu", GetType(Short)))

        Dim datumZasahuParameter As ObjectParameter = If(datumZasahu.HasValue, New ObjectParameter("DatumZasahu", datumZasahu), New ObjectParameter("DatumZasahu", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_FA_FakturovatNa", iDVykazPraceParameter, rr_FakturovatNaFirmuParameter, datumZasahuParameter)
    End Function

    Public Overridable Function AGsp_Do_FirmaParametryValidni(firma As String, stavValidity As Nullable(Of Short)) As Integer
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim stavValidityParameter As ObjectParameter = If(stavValidity.HasValue, New ObjectParameter("StavValidity", stavValidity), New ObjectParameter("StavValidity", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_FirmaParametryValidni", firmaParameter, stavValidityParameter)
    End Function

    Public Overridable Function AGsp_Do_PrepocitejOperativniZasobu(produkt As String) As Integer
        Dim produktParameter As ObjectParameter = If(produkt IsNot Nothing, New ObjectParameter("Produkt", produkt), New ObjectParameter("Produkt", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_PrepocitejOperativniZasobu", produktParameter)
    End Function

    Public Overridable Function AGsp_Do_SpocitejProviziTechnika(iDVykazPracePol As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDVykazPracePolParameter As ObjectParameter = If(iDVykazPracePol.HasValue, New ObjectParameter("IDVykazPracePol", iDVykazPracePol), New ObjectParameter("IDVykazPracePol", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_SpocitejProviziTechnika", iDVykazPracePolParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_EditFirmaDetail(firma As String, obor_cinnosti As String, poznamky As String) As Integer
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim obor_cinnostiParameter As ObjectParameter = If(obor_cinnosti IsNot Nothing, New ObjectParameter("Obor_cinnosti", obor_cinnosti), New ObjectParameter("Obor_cinnosti", GetType(String)))

        Dim poznamkyParameter As ObjectParameter = If(poznamky IsNot Nothing, New ObjectParameter("Poznamky", poznamky), New ObjectParameter("Poznamky", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_EditFirmaDetail", firmaParameter, obor_cinnostiParameter, poznamkyParameter)
    End Function

    Public Overridable Function AGsp_EditFirmaDetailPodrobne(firma As String, nazev_firmy As String, vzdalenost As Nullable(Of Short), obor_cinnosti As String, poznamky As String, iCZ As String) As Integer
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim nazev_firmyParameter As ObjectParameter = If(nazev_firmy IsNot Nothing, New ObjectParameter("Nazev_firmy", nazev_firmy), New ObjectParameter("Nazev_firmy", GetType(String)))

        Dim vzdalenostParameter As ObjectParameter = If(vzdalenost.HasValue, New ObjectParameter("Vzdalenost", vzdalenost), New ObjectParameter("Vzdalenost", GetType(Short)))

        Dim obor_cinnostiParameter As ObjectParameter = If(obor_cinnosti IsNot Nothing, New ObjectParameter("Obor_cinnosti", obor_cinnosti), New ObjectParameter("Obor_cinnosti", GetType(String)))

        Dim poznamkyParameter As ObjectParameter = If(poznamky IsNot Nothing, New ObjectParameter("Poznamky", poznamky), New ObjectParameter("Poznamky", GetType(String)))

        Dim iCZParameter As ObjectParameter = If(iCZ IsNot Nothing, New ObjectParameter("ICZ", iCZ), New ObjectParameter("ICZ", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_EditFirmaDetailPodrobne", firmaParameter, nazev_firmyParameter, vzdalenostParameter, obor_cinnostiParameter, poznamkyParameter, iCZParameter)
    End Function

    Public Overridable Function AGsp_EditFirmaGPS(firma As String, gPSLat As String, gPSLng As String, gPSValid As Nullable(Of Boolean)) As Integer
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim gPSLatParameter As ObjectParameter = If(gPSLat IsNot Nothing, New ObjectParameter("GPSLat", gPSLat), New ObjectParameter("GPSLat", GetType(String)))

        Dim gPSLngParameter As ObjectParameter = If(gPSLng IsNot Nothing, New ObjectParameter("GPSLng", gPSLng), New ObjectParameter("GPSLng", GetType(String)))

        Dim gPSValidParameter As ObjectParameter = If(gPSValid.HasValue, New ObjectParameter("GPSValid", gPSValid), New ObjectParameter("GPSValid", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_EditFirmaGPS", firmaParameter, gPSLatParameter, gPSLngParameter, gPSValidParameter)
    End Function

    Public Overridable Function AGsp_EditProduktNaskladnit(iDPrijemkaPol As Nullable(Of Integer), produkt As String, naskladnenoEMJ As Nullable(Of Decimal), cenaNakup As Nullable(Of Decimal), rr_Dodavatel As Nullable(Of Integer), vSPrijmovehoDokladu As String, iDUserNaskladnil As Nullable(Of Integer), povedloSe As ObjectParameter, hlaseni As ObjectParameter) As Integer
        Dim iDPrijemkaPolParameter As ObjectParameter = If(iDPrijemkaPol.HasValue, New ObjectParameter("IDPrijemkaPol", iDPrijemkaPol), New ObjectParameter("IDPrijemkaPol", GetType(Integer)))

        Dim produktParameter As ObjectParameter = If(produkt IsNot Nothing, New ObjectParameter("Produkt", produkt), New ObjectParameter("Produkt", GetType(String)))

        Dim naskladnenoEMJParameter As ObjectParameter = If(naskladnenoEMJ.HasValue, New ObjectParameter("NaskladnenoEMJ", naskladnenoEMJ), New ObjectParameter("NaskladnenoEMJ", GetType(Decimal)))

        Dim cenaNakupParameter As ObjectParameter = If(cenaNakup.HasValue, New ObjectParameter("CenaNakup", cenaNakup), New ObjectParameter("CenaNakup", GetType(Decimal)))

        Dim rr_DodavatelParameter As ObjectParameter = If(rr_Dodavatel.HasValue, New ObjectParameter("rr_Dodavatel", rr_Dodavatel), New ObjectParameter("rr_Dodavatel", GetType(Integer)))

        Dim vSPrijmovehoDokladuParameter As ObjectParameter = If(vSPrijmovehoDokladu IsNot Nothing, New ObjectParameter("VSPrijmovehoDokladu", vSPrijmovehoDokladu), New ObjectParameter("VSPrijmovehoDokladu", GetType(String)))

        Dim iDUserNaskladnilParameter As ObjectParameter = If(iDUserNaskladnil.HasValue, New ObjectParameter("IDUserNaskladnil", iDUserNaskladnil), New ObjectParameter("IDUserNaskladnil", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_EditProduktNaskladnit", iDPrijemkaPolParameter, produktParameter, naskladnenoEMJParameter, cenaNakupParameter, rr_DodavatelParameter, vSPrijmovehoDokladuParameter, iDUserNaskladnilParameter, povedloSe, hlaseni)
    End Function

    Public Overridable Function AGsp_EditProduktZbozi(produkt As String, popis As String, carovy_kod As String, jednotky As String, cenaProdejni As Nullable(Of Decimal), mnozstvi_minimalni As Nullable(Of Decimal), internet As String, poznamka As String, zarazeni As String, povedloSe As ObjectParameter, hlaseni As ObjectParameter) As Integer
        Dim produktParameter As ObjectParameter = If(produkt IsNot Nothing, New ObjectParameter("Produkt", produkt), New ObjectParameter("Produkt", GetType(String)))

        Dim popisParameter As ObjectParameter = If(popis IsNot Nothing, New ObjectParameter("Popis", popis), New ObjectParameter("Popis", GetType(String)))

        Dim carovy_kodParameter As ObjectParameter = If(carovy_kod IsNot Nothing, New ObjectParameter("Carovy_kod", carovy_kod), New ObjectParameter("Carovy_kod", GetType(String)))

        Dim jednotkyParameter As ObjectParameter = If(jednotky IsNot Nothing, New ObjectParameter("Jednotky", jednotky), New ObjectParameter("Jednotky", GetType(String)))

        Dim cenaProdejniParameter As ObjectParameter = If(cenaProdejni.HasValue, New ObjectParameter("CenaProdejni", cenaProdejni), New ObjectParameter("CenaProdejni", GetType(Decimal)))

        Dim mnozstvi_minimalniParameter As ObjectParameter = If(mnozstvi_minimalni.HasValue, New ObjectParameter("Mnozstvi_minimalni", mnozstvi_minimalni), New ObjectParameter("Mnozstvi_minimalni", GetType(Decimal)))

        Dim internetParameter As ObjectParameter = If(internet IsNot Nothing, New ObjectParameter("Internet", internet), New ObjectParameter("Internet", GetType(String)))

        Dim poznamkaParameter As ObjectParameter = If(poznamka IsNot Nothing, New ObjectParameter("Poznamka", poznamka), New ObjectParameter("Poznamka", GetType(String)))

        Dim zarazeniParameter As ObjectParameter = If(zarazeni IsNot Nothing, New ObjectParameter("Zarazeni", zarazeni), New ObjectParameter("Zarazeni", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_EditProduktZbozi", produktParameter, popisParameter, carovy_kodParameter, jednotkyParameter, cenaProdejniParameter, mnozstvi_minimalniParameter, internetParameter, poznamkaParameter, zarazeniParameter, povedloSe, hlaseni)
    End Function

    Public Overridable Function AGsp_EditVykazPrace(iDVykazPrace As Nullable(Of Integer), datVzniku As Nullable(Of Date), iDUserUpravil As Nullable(Of Integer), poznamka As String, rr_StavPracaku As Nullable(Of Byte)) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Dim datVznikuParameter As ObjectParameter = If(datVzniku.HasValue, New ObjectParameter("DatVzniku", datVzniku), New ObjectParameter("DatVzniku", GetType(Date)))

        Dim iDUserUpravilParameter As ObjectParameter = If(iDUserUpravil.HasValue, New ObjectParameter("IDUserUpravil", iDUserUpravil), New ObjectParameter("IDUserUpravil", GetType(Integer)))

        Dim poznamkaParameter As ObjectParameter = If(poznamka IsNot Nothing, New ObjectParameter("Poznamka", poznamka), New ObjectParameter("Poznamka", GetType(String)))

        Dim rr_StavPracakuParameter As ObjectParameter = If(rr_StavPracaku.HasValue, New ObjectParameter("rr_StavPracaku", rr_StavPracaku), New ObjectParameter("rr_StavPracaku", GetType(Byte)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_EditVykazPrace", iDVykazPraceParameter, datVznikuParameter, iDUserUpravilParameter, poznamkaParameter, rr_StavPracakuParameter)
    End Function

    Public Overridable Function AGsp_EditVykazPraceCisloFaktury(iDVykazPrace As Nullable(Of Integer), cisloFaktury As String) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Dim cisloFakturyParameter As ObjectParameter = If(cisloFaktury IsNot Nothing, New ObjectParameter("CisloFaktury", cisloFaktury), New ObjectParameter("CisloFaktury", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_EditVykazPraceCisloFaktury", iDVykazPraceParameter, cisloFakturyParameter)
    End Function

    Public Overridable Function AGsp_FA_PracakyDetailHL(iDVykazPrace As Nullable(Of Integer)) As ObjectResult(Of AGsp_FA_PracakyDetailHL_Result)
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_FA_PracakyDetailHL_Result)("AGsp_FA_PracakyDetailHL", iDVykazPraceParameter)
    End Function

    Public Overridable Function AGsp_FA_PracakyDetailPol(iDVykazPrace As Nullable(Of Integer)) As ObjectResult(Of AGsp_FA_PracakyDetailPol_Result)
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_FA_PracakyDetailPol_Result)("AGsp_FA_PracakyDetailPol", iDVykazPraceParameter)
    End Function

    Public Overridable Function AGsp_FirmaExist(firma As String, existuje As ObjectParameter) As Integer
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_FirmaExist", firmaParameter, existuje)
    End Function

    Public Overridable Function AGsp_GetAktualniVyuctovani(iDTechnika As Nullable(Of Integer), iDVyuctovani As ObjectParameter) As Integer
        Dim iDTechnikaParameter As ObjectParameter = If(iDTechnika.HasValue, New ObjectParameter("IDTechnika", iDTechnika), New ObjectParameter("IDTechnika", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_GetAktualniVyuctovani", iDTechnikaParameter, iDVyuctovani)
    End Function

    Public Overridable Function AGsp_GetCenaHodinyTechnika(iDTechnika As Nullable(Of Integer), hodinovaSazba As Nullable(Of Decimal), vzdalenkaMalyZasah As Nullable(Of Decimal), vzdalenakVelkyZasah As Nullable(Of Decimal)) As Integer
        Dim iDTechnikaParameter As ObjectParameter = If(iDTechnika.HasValue, New ObjectParameter("IDTechnika", iDTechnika), New ObjectParameter("IDTechnika", GetType(Integer)))

        Dim hodinovaSazbaParameter As ObjectParameter = If(hodinovaSazba.HasValue, New ObjectParameter("HodinovaSazba", hodinovaSazba), New ObjectParameter("HodinovaSazba", GetType(Decimal)))

        Dim vzdalenkaMalyZasahParameter As ObjectParameter = If(vzdalenkaMalyZasah.HasValue, New ObjectParameter("VzdalenkaMalyZasah", vzdalenkaMalyZasah), New ObjectParameter("VzdalenkaMalyZasah", GetType(Decimal)))

        Dim vzdalenakVelkyZasahParameter As ObjectParameter = If(vzdalenakVelkyZasah.HasValue, New ObjectParameter("VzdalenakVelkyZasah", vzdalenakVelkyZasah), New ObjectParameter("VzdalenakVelkyZasah", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_GetCenaHodinyTechnika", iDTechnikaParameter, hodinovaSazbaParameter, vzdalenkaMalyZasahParameter, vzdalenakVelkyZasahParameter)
    End Function

    Public Overridable Function AGsp_GetDialogObjednavkaTlacitka(iDObjednavkyPol As Nullable(Of Integer)) As ObjectResult(Of AGsp_GetDialogObjednavkaTlacitka_Result)
        Dim iDObjednavkyPolParameter As ObjectParameter = If(iDObjednavkyPol.HasValue, New ObjectParameter("IDObjednavkyPol", iDObjednavkyPol), New ObjectParameter("IDObjednavkyPol", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetDialogObjednavkaTlacitka_Result)("AGsp_GetDialogObjednavkaTlacitka", iDObjednavkyPolParameter)
    End Function

    Public Overridable Function AGsp_GetFirmaAll() As ObjectResult(Of AGsp_GetFirmaAll_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFirmaAll_Result)("AGsp_GetFirmaAll")
    End Function

    Public Overridable Function AGsp_GetFirmaDetail(firma As String) As ObjectResult(Of AGsp_GetFirmaDetail_Result)
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFirmaDetail_Result)("AGsp_GetFirmaDetail", firmaParameter)
    End Function

    Public Overridable Function AGsp_GetFirmaInventarDetail(iDInventare As Nullable(Of Integer)) As ObjectResult(Of AGsp_GetFirmaInventarDetail_Result)
        Dim iDInventareParameter As ObjectParameter = If(iDInventare.HasValue, New ObjectParameter("IDInventare", iDInventare), New ObjectParameter("IDInventare", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFirmaInventarDetail_Result)("AGsp_GetFirmaInventarDetail", iDInventareParameter)
    End Function

    Public Overridable Function AGsp_GetFirmaInventarFoto(iDInventare As Nullable(Of Integer)) As ObjectResult(Of AGsp_GetFirmaInventarFoto_Result)
        Dim iDInventareParameter As ObjectParameter = If(iDInventare.HasValue, New ObjectParameter("IDInventare", iDInventare), New ObjectParameter("IDInventare", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFirmaInventarFoto_Result)("AGsp_GetFirmaInventarFoto", iDInventareParameter)
    End Function

    Public Overridable Function AGsp_GetFirmaInventarSeznam(firma As String, pracoviste As String) As ObjectResult(Of AGsp_GetFirmaInventarSeznam_Result)
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim pracovisteParameter As ObjectParameter = If(pracoviste IsNot Nothing, New ObjectParameter("Pracoviste", pracoviste), New ObjectParameter("Pracoviste", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFirmaInventarSeznam_Result)("AGsp_GetFirmaInventarSeznam", firmaParameter, pracovisteParameter)
    End Function

    Public Overridable Function AGsp_GetFirmaKontaktyDetail(firma As String, kontaktni_udaj As Nullable(Of Short)) As ObjectResult(Of AGsp_GetFirmaKontaktyDetail_Result)
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim kontaktni_udajParameter As ObjectParameter = If(kontaktni_udaj.HasValue, New ObjectParameter("Kontaktni_udaj", kontaktni_udaj), New ObjectParameter("Kontaktni_udaj", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFirmaKontaktyDetail_Result)("AGsp_GetFirmaKontaktyDetail", firmaParameter, kontaktni_udajParameter)
    End Function

    Public Overridable Function AGsp_GetFirmaKontaktySeznam(firma As String) As ObjectResult(Of AGsp_GetFirmaKontaktySeznam_Result)
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFirmaKontaktySeznam_Result)("AGsp_GetFirmaKontaktySeznam", firmaParameter)
    End Function

    Public Overridable Function AGsp_GetFirmaObjednavkySeznam(firma As String) As ObjectResult(Of AGsp_GetFirmaObjednavkySeznam_Result)
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFirmaObjednavkySeznam_Result)("AGsp_GetFirmaObjednavkySeznam", firmaParameter)
    End Function

    Public Overridable Function AGsp_GetFirmaObjednavkySeznamDlePracoviste(pracoviste As String) As ObjectResult(Of AGsp_GetFirmaObjednavkySeznamDlePracoviste_Result)
        Dim pracovisteParameter As ObjectParameter = If(pracoviste IsNot Nothing, New ObjectParameter("Pracoviste", pracoviste), New ObjectParameter("Pracoviste", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFirmaObjednavkySeznamDlePracoviste_Result)("AGsp_GetFirmaObjednavkySeznamDlePracoviste", pracovisteParameter)
    End Function

    Public Overridable Function AGsp_GetFirmaParametry(firma As String) As ObjectResult(Of AGsp_GetFirmaParametry_Result)
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFirmaParametry_Result)("AGsp_GetFirmaParametry", firmaParameter)
    End Function

    Public Overridable Function AGsp_GetFirmaParametryDlePracaku(iDVykazPrace As Nullable(Of Integer), hodinovaSazba As ObjectParameter, sazbaKm As ObjectParameter, rr_TypServisniSmlouvy As ObjectParameter, sazbaMalyZasah As ObjectParameter, sazbaVelkyZasah As ObjectParameter, parametryValidni As ObjectParameter) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_GetFirmaParametryDlePracaku", iDVykazPraceParameter, hodinovaSazba, sazbaKm, rr_TypServisniSmlouvy, sazbaMalyZasah, sazbaVelkyZasah, parametryValidni)
    End Function

    Public Overridable Function AGsp_GetFirmaPracovisteDetail(firma As String, pracoviste As String) As ObjectResult(Of AGsp_GetFirmaPracovisteDetail_Result)
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim pracovisteParameter As ObjectParameter = If(pracoviste IsNot Nothing, New ObjectParameter("Pracoviste", pracoviste), New ObjectParameter("Pracoviste", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFirmaPracovisteDetail_Result)("AGsp_GetFirmaPracovisteDetail", firmaParameter, pracovisteParameter)
    End Function

    Public Overridable Function AGsp_GetFirmaPracovisteDetailKontakty(firma As String, pracoviste As String) As ObjectResult(Of AGsp_GetFirmaPracovisteDetailKontakty_Result)
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim pracovisteParameter As ObjectParameter = If(pracoviste IsNot Nothing, New ObjectParameter("Pracoviste", pracoviste), New ObjectParameter("Pracoviste", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFirmaPracovisteDetailKontakty_Result)("AGsp_GetFirmaPracovisteDetailKontakty", firmaParameter, pracovisteParameter)
    End Function

    Public Overridable Function AGsp_GetFirmaPracovisteSeznam(firma As String) As ObjectResult(Of AGsp_GetFirmaPracovisteSeznam_Result)
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFirmaPracovisteSeznam_Result)("AGsp_GetFirmaPracovisteSeznam", firmaParameter)
    End Function

    Public Overridable Function AGsp_GetFirmaPracovisteSeznamHledej(hledej As String, hledatDleGPS As Nullable(Of Boolean), gPSLat As String, gPSLng As String) As ObjectResult(Of AGsp_GetFirmaPracovisteSeznamHledej_Result)
        Dim hledejParameter As ObjectParameter = If(hledej IsNot Nothing, New ObjectParameter("Hledej", hledej), New ObjectParameter("Hledej", GetType(String)))

        Dim hledatDleGPSParameter As ObjectParameter = If(hledatDleGPS.HasValue, New ObjectParameter("HledatDleGPS", hledatDleGPS), New ObjectParameter("HledatDleGPS", GetType(Boolean)))

        Dim gPSLatParameter As ObjectParameter = If(gPSLat IsNot Nothing, New ObjectParameter("GPSLat", gPSLat), New ObjectParameter("GPSLat", GetType(String)))

        Dim gPSLngParameter As ObjectParameter = If(gPSLng IsNot Nothing, New ObjectParameter("GPSLng", gPSLng), New ObjectParameter("GPSLng", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFirmaPracovisteSeznamHledej_Result)("AGsp_GetFirmaPracovisteSeznamHledej", hledejParameter, hledatDleGPSParameter, gPSLatParameter, gPSLngParameter)
    End Function

    Public Overridable Function AGsp_GetFirmyObjednavkaDetail(iDObjednavkyPol As Nullable(Of Integer)) As ObjectResult(Of AGsp_GetFirmyObjednavkaDetail_Result)
        Dim iDObjednavkyPolParameter As ObjectParameter = If(iDObjednavkyPol.HasValue, New ObjectParameter("IDObjednavkyPol", iDObjednavkyPol), New ObjectParameter("IDObjednavkyPol", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFirmyObjednavkaDetail_Result)("AGsp_GetFirmyObjednavkaDetail", iDObjednavkyPolParameter)
    End Function

    Public Overridable Function AGsp_GetHledejFirmaFulltext(hledej As String) As ObjectResult(Of AGsp_GetHledejFirmaFulltext_Result)
        Dim hledejParameter As ObjectParameter = If(hledej IsNot Nothing, New ObjectParameter("Hledej", hledej), New ObjectParameter("Hledej", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetHledejFirmaFulltext_Result)("AGsp_GetHledejFirmaFulltext", hledejParameter)
    End Function

    Public Overridable Function AGsp_GetHledejGlobalFullText(hledej As String) As ObjectResult(Of AGsp_GetHledejGlobalFullText_Result)
        Dim hledejParameter As ObjectParameter = If(hledej IsNot Nothing, New ObjectParameter("Hledej", hledej), New ObjectParameter("Hledej", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetHledejGlobalFullText_Result)("AGsp_GetHledejGlobalFullText", hledejParameter)
    End Function

    Public Overridable Function AGsp_GetMojePracaky(iDUser As Nullable(Of Integer)) As ObjectResult(Of AGsp_GetMojePracaky_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetMojePracaky_Result)("AGsp_GetMojePracaky", iDUserParameter)
    End Function

    Public Overridable Function AGsp_GetObjednavkySeznam(hledej As String, zobrazitVse As Nullable(Of Boolean)) As ObjectResult(Of AGsp_GetObjednavkySeznam_Result)
        Dim hledejParameter As ObjectParameter = If(hledej IsNot Nothing, New ObjectParameter("Hledej", hledej), New ObjectParameter("Hledej", GetType(String)))

        Dim zobrazitVseParameter As ObjectParameter = If(zobrazitVse.HasValue, New ObjectParameter("ZobrazitVse", zobrazitVse), New ObjectParameter("ZobrazitVse", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetObjednavkySeznam_Result)("AGsp_GetObjednavkySeznam", hledejParameter, zobrazitVseParameter)
    End Function

    Public Overridable Function AGsp_GetObjednavkyVse() As ObjectResult(Of AGsp_GetObjednavkyVse_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetObjednavkyVse_Result)("AGsp_GetObjednavkyVse")
    End Function

    Public Overridable Function AGsp_GetPracakHodnotyDopravne(iDVykazPrace As Nullable(Of Integer), rr_TypPolozkyPracaku As Nullable(Of Byte), pocetKM As ObjectParameter, dopravneText As ObjectParameter, najetoKM As ObjectParameter) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Dim rr_TypPolozkyPracakuParameter As ObjectParameter = If(rr_TypPolozkyPracaku.HasValue, New ObjectParameter("rr_TypPolozkyPracaku", rr_TypPolozkyPracaku), New ObjectParameter("rr_TypPolozkyPracaku", GetType(Byte)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_GetPracakHodnotyDopravne", iDVykazPraceParameter, rr_TypPolozkyPracakuParameter, pocetKM, dopravneText, najetoKM)
    End Function

    Public Overridable Function AGsp_GetPracakTextDoMailu(iDVykazPrace As Nullable(Of Integer), emailKomu As ObjectParameter, predmet As ObjectParameter, body As ObjectParameter, zapati As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_GetPracakTextDoMailu", iDVykazPraceParameter, emailKomu, predmet, body, zapati, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_GetPracakUdelatDopravne(iDVykazPrace As Nullable(Of Integer), udelatPracak As ObjectParameter) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_GetPracakUdelatDopravne", iDVykazPraceParameter, udelatPracak)
    End Function

    Public Overridable Function AGsp_GetProduktDetail(produkt As String, carovy_kod As String) As ObjectResult(Of AGsp_GetProduktDetail_Result)
        Dim produktParameter As ObjectParameter = If(produkt IsNot Nothing, New ObjectParameter("Produkt", produkt), New ObjectParameter("Produkt", GetType(String)))

        Dim carovy_kodParameter As ObjectParameter = If(carovy_kod IsNot Nothing, New ObjectParameter("Carovy_kod", carovy_kod), New ObjectParameter("Carovy_kod", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetProduktDetail_Result)("AGsp_GetProduktDetail", produktParameter, carovy_kodParameter)
    End Function

    Public Overridable Function AGsp_GetProduktProcentoProvizeSeznam(iDUser As Nullable(Of Integer)) As ObjectResult(Of AGsp_GetProduktProcentoProvizeSeznam_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetProduktProcentoProvizeSeznam_Result)("AGsp_GetProduktProcentoProvizeSeznam", iDUserParameter)
    End Function

    Public Overridable Function AGsp_GetProduktSeznamHledaci(hledej As String) As ObjectResult(Of AGsp_GetProduktSeznamHledaci_Result)
        Dim hledejParameter As ObjectParameter = If(hledej IsNot Nothing, New ObjectParameter("Hledej", hledej), New ObjectParameter("Hledej", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetProduktSeznamHledaci_Result)("AGsp_GetProduktSeznamHledaci", hledejParameter)
    End Function

    Public Overridable Function AGsp_GetTaskDetail(iDTask As Nullable(Of Integer)) As ObjectResult(Of AGsp_GetTaskDetail_Result)
        Dim iDTaskParameter As ObjectParameter = If(iDTask.HasValue, New ObjectParameter("IDTask", iDTask), New ObjectParameter("IDTask", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetTaskDetail_Result)("AGsp_GetTaskDetail", iDTaskParameter)
    End Function

    Public Overridable Function AGsp_GetTaskSeznam(iDUserResitel As Nullable(Of Integer)) As ObjectResult(Of AGsp_GetTaskSeznam_Result)
        Dim iDUserResitelParameter As ObjectParameter = If(iDUserResitel.HasValue, New ObjectParameter("IDUserResitel", iDUserResitel), New ObjectParameter("IDUserResitel", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetTaskSeznam_Result)("AGsp_GetTaskSeznam", iDUserResitelParameter)
    End Function

    Public Overridable Function AGsp_GetVykazPraceDetail(iDVykazPrace As Nullable(Of Integer)) As ObjectResult(Of AGsp_GetVykazPraceDetail_Result)
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetVykazPraceDetail_Result)("AGsp_GetVykazPraceDetail", iDVykazPraceParameter)
    End Function

    Public Overridable Function AGsp_GetVykazPraceFirmaSeznam(iDUser As Nullable(Of Integer), firma As String) As ObjectResult(Of AGsp_GetVykazPraceFirmaSeznam_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetVykazPraceFirmaSeznam_Result)("AGsp_GetVykazPraceFirmaSeznam", iDUserParameter, firmaParameter)
    End Function

    Public Overridable Function AGsp_GetVykazPraceNedokoncene(iDUser As Nullable(Of Integer)) As ObjectResult(Of AGsp_GetVykazPraceNedokoncene_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetVykazPraceNedokoncene_Result)("AGsp_GetVykazPraceNedokoncene", iDUserParameter)
    End Function

    Public Overridable Function AGsp_GetVykazPracePolDetail(iDVykazPracePol As Nullable(Of Integer)) As ObjectResult(Of AGsp_GetVykazPracePolDetail_Result)
        Dim iDVykazPracePolParameter As ObjectParameter = If(iDVykazPracePol.HasValue, New ObjectParameter("IDVykazPracePol", iDVykazPracePol), New ObjectParameter("IDVykazPracePol", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetVykazPracePolDetail_Result)("AGsp_GetVykazPracePolDetail", iDVykazPracePolParameter)
    End Function

    Public Overridable Function AGsp_GetVykazPracePolSeznam(iDVykazPrace As Nullable(Of Integer)) As ObjectResult(Of AGsp_GetVykazPracePolSeznam_Result)
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetVykazPracePolSeznam_Result)("AGsp_GetVykazPracePolSeznam", iDVykazPraceParameter)
    End Function

    Public Overridable Function AGsp_GetVykazPraceSeznam(iDUser As Nullable(Of Integer), hledej As String) As ObjectResult(Of AGsp_GetVykazPraceSeznam_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim hledejParameter As ObjectParameter = If(hledej IsNot Nothing, New ObjectParameter("Hledej", hledej), New ObjectParameter("Hledej", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetVykazPraceSeznam_Result)("AGsp_GetVykazPraceSeznam", iDUserParameter, hledejParameter)
    End Function

    Public Overridable Function AGsp_HledejProduktFullText(hledej As String) As ObjectResult(Of AGsp_HledejProduktFullText_Result)
        Dim hledejParameter As ObjectParameter = If(hledej IsNot Nothing, New ObjectParameter("Hledej", hledej), New ObjectParameter("Hledej", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_HledejProduktFullText_Result)("AGsp_HledejProduktFullText", hledejParameter)
    End Function

    Public Overridable Function AGsp_pokusy() As ObjectResult(Of String)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("AGsp_pokusy")
    End Function

    Public Overridable Function AGsp_Run_Objednavka0or1or3to4(iDObjednavkyPol As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDObjednavkyPolParameter As ObjectParameter = If(iDObjednavkyPol.HasValue, New ObjectParameter("IDObjednavkyPol", iDObjednavkyPol), New ObjectParameter("IDObjednavkyPol", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Run_Objednavka0or1or3to4", iDObjednavkyPolParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Run_Objednavka0or1or3to5(iDObjednavkyPol As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDObjednavkyPolParameter As ObjectParameter = If(iDObjednavkyPol.HasValue, New ObjectParameter("IDObjednavkyPol", iDObjednavkyPol), New ObjectParameter("IDObjednavkyPol", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Run_Objednavka0or1or3to5", iDObjednavkyPolParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Run_Objednavka0or1to3(iDObjednavkyPol As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDObjednavkyPolParameter As ObjectParameter = If(iDObjednavkyPol.HasValue, New ObjectParameter("IDObjednavkyPol", iDObjednavkyPol), New ObjectParameter("IDObjednavkyPol", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Run_Objednavka0or1to3", iDObjednavkyPolParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Run_Pracak10to20(iDVykazPrace As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Run_Pracak10to20", iDVykazPraceParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Run_Pracak20to30(iDVykazPrace As Nullable(Of Integer), cisloFaktury As String, lL_LastLapse As ObjectParameter) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Dim cisloFakturyParameter As ObjectParameter = If(cisloFaktury IsNot Nothing, New ObjectParameter("CisloFaktury", cisloFaktury), New ObjectParameter("CisloFaktury", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Run_Pracak20to30", iDVykazPraceParameter, cisloFakturyParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_UpdateFirmaDetail(firma As String, nazev_firmy As String, ulice As String, pSC As String, mesto As String, telefon_1 As String, telefon_2 As String, e_mail As String, iCO As String, dIC As String, vzdalenost As Nullable(Of Short), obor_cinnosti As String, poznamky As String, titul As String, krestni As String, prijmeni As String, funkce As String, zasilat As String) As Integer
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim nazev_firmyParameter As ObjectParameter = If(nazev_firmy IsNot Nothing, New ObjectParameter("Nazev_firmy", nazev_firmy), New ObjectParameter("Nazev_firmy", GetType(String)))

        Dim uliceParameter As ObjectParameter = If(ulice IsNot Nothing, New ObjectParameter("Ulice", ulice), New ObjectParameter("Ulice", GetType(String)))

        Dim pSCParameter As ObjectParameter = If(pSC IsNot Nothing, New ObjectParameter("PSC", pSC), New ObjectParameter("PSC", GetType(String)))

        Dim mestoParameter As ObjectParameter = If(mesto IsNot Nothing, New ObjectParameter("Mesto", mesto), New ObjectParameter("Mesto", GetType(String)))

        Dim telefon_1Parameter As ObjectParameter = If(telefon_1 IsNot Nothing, New ObjectParameter("Telefon_1", telefon_1), New ObjectParameter("Telefon_1", GetType(String)))

        Dim telefon_2Parameter As ObjectParameter = If(telefon_2 IsNot Nothing, New ObjectParameter("Telefon_2", telefon_2), New ObjectParameter("Telefon_2", GetType(String)))

        Dim e_mailParameter As ObjectParameter = If(e_mail IsNot Nothing, New ObjectParameter("E_mail", e_mail), New ObjectParameter("E_mail", GetType(String)))

        Dim iCOParameter As ObjectParameter = If(iCO IsNot Nothing, New ObjectParameter("ICO", iCO), New ObjectParameter("ICO", GetType(String)))

        Dim dICParameter As ObjectParameter = If(dIC IsNot Nothing, New ObjectParameter("DIC", dIC), New ObjectParameter("DIC", GetType(String)))

        Dim vzdalenostParameter As ObjectParameter = If(vzdalenost.HasValue, New ObjectParameter("Vzdalenost", vzdalenost), New ObjectParameter("Vzdalenost", GetType(Short)))

        Dim obor_cinnostiParameter As ObjectParameter = If(obor_cinnosti IsNot Nothing, New ObjectParameter("Obor_cinnosti", obor_cinnosti), New ObjectParameter("Obor_cinnosti", GetType(String)))

        Dim poznamkyParameter As ObjectParameter = If(poznamky IsNot Nothing, New ObjectParameter("Poznamky", poznamky), New ObjectParameter("Poznamky", GetType(String)))

        Dim titulParameter As ObjectParameter = If(titul IsNot Nothing, New ObjectParameter("Titul", titul), New ObjectParameter("Titul", GetType(String)))

        Dim krestniParameter As ObjectParameter = If(krestni IsNot Nothing, New ObjectParameter("Krestni", krestni), New ObjectParameter("Krestni", GetType(String)))

        Dim prijmeniParameter As ObjectParameter = If(prijmeni IsNot Nothing, New ObjectParameter("Prijmeni", prijmeni), New ObjectParameter("Prijmeni", GetType(String)))

        Dim funkceParameter As ObjectParameter = If(funkce IsNot Nothing, New ObjectParameter("Funkce", funkce), New ObjectParameter("Funkce", GetType(String)))

        Dim zasilatParameter As ObjectParameter = If(zasilat IsNot Nothing, New ObjectParameter("Zasilat", zasilat), New ObjectParameter("Zasilat", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_UpdateFirmaDetail", firmaParameter, nazev_firmyParameter, uliceParameter, pSCParameter, mestoParameter, telefon_1Parameter, telefon_2Parameter, e_mailParameter, iCOParameter, dICParameter, vzdalenostParameter, obor_cinnostiParameter, poznamkyParameter, titulParameter, krestniParameter, prijmeniParameter, funkceParameter, zasilatParameter)
    End Function

    Public Overridable Function AGsp_AddOrEditVykazPracePol(iDVykazPrace As Nullable(Of Integer), iDVykazPracePol As Nullable(Of Integer), iDUserUpravil As Nullable(Of Integer), rr_TypPolozkyPracaku As Nullable(Of Short), casOd As Nullable(Of System.TimeSpan), casDo As Nullable(Of System.TimeSpan), hodin As Nullable(Of Decimal), iDTechnika As Nullable(Of Integer), produkt As String, textNaFakturu As String, textInterniDoMailu As String, pocetEMJ As Nullable(Of Decimal), cenaEMJ As Nullable(Of Decimal), vzdalenka As Nullable(Of Boolean), zdarma As Nullable(Of Boolean), navzdoryServisceUctovat As Nullable(Of Boolean), najetoKM As Nullable(Of Decimal), rr_HodinoveUctovani As Nullable(Of Short), iDVykazPracePolNEW As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Dim iDVykazPracePolParameter As ObjectParameter = If(iDVykazPracePol.HasValue, New ObjectParameter("IDVykazPracePol", iDVykazPracePol), New ObjectParameter("IDVykazPracePol", GetType(Integer)))

        Dim iDUserUpravilParameter As ObjectParameter = If(iDUserUpravil.HasValue, New ObjectParameter("IDUserUpravil", iDUserUpravil), New ObjectParameter("IDUserUpravil", GetType(Integer)))

        Dim rr_TypPolozkyPracakuParameter As ObjectParameter = If(rr_TypPolozkyPracaku.HasValue, New ObjectParameter("rr_TypPolozkyPracaku", rr_TypPolozkyPracaku), New ObjectParameter("rr_TypPolozkyPracaku", GetType(Short)))

        Dim casOdParameter As ObjectParameter = If(casOd.HasValue, New ObjectParameter("CasOd", casOd), New ObjectParameter("CasOd", GetType(System.TimeSpan)))

        Dim casDoParameter As ObjectParameter = If(casDo.HasValue, New ObjectParameter("CasDo", casDo), New ObjectParameter("CasDo", GetType(System.TimeSpan)))

        Dim hodinParameter As ObjectParameter = If(hodin.HasValue, New ObjectParameter("Hodin", hodin), New ObjectParameter("Hodin", GetType(Decimal)))

        Dim iDTechnikaParameter As ObjectParameter = If(iDTechnika.HasValue, New ObjectParameter("IDTechnika", iDTechnika), New ObjectParameter("IDTechnika", GetType(Integer)))

        Dim produktParameter As ObjectParameter = If(produkt IsNot Nothing, New ObjectParameter("Produkt", produkt), New ObjectParameter("Produkt", GetType(String)))

        Dim textNaFakturuParameter As ObjectParameter = If(textNaFakturu IsNot Nothing, New ObjectParameter("TextNaFakturu", textNaFakturu), New ObjectParameter("TextNaFakturu", GetType(String)))

        Dim textInterniDoMailuParameter As ObjectParameter = If(textInterniDoMailu IsNot Nothing, New ObjectParameter("TextInterniDoMailu", textInterniDoMailu), New ObjectParameter("TextInterniDoMailu", GetType(String)))

        Dim pocetEMJParameter As ObjectParameter = If(pocetEMJ.HasValue, New ObjectParameter("PocetEMJ", pocetEMJ), New ObjectParameter("PocetEMJ", GetType(Decimal)))

        Dim cenaEMJParameter As ObjectParameter = If(cenaEMJ.HasValue, New ObjectParameter("CenaEMJ", cenaEMJ), New ObjectParameter("CenaEMJ", GetType(Decimal)))

        Dim vzdalenkaParameter As ObjectParameter = If(vzdalenka.HasValue, New ObjectParameter("Vzdalenka", vzdalenka), New ObjectParameter("Vzdalenka", GetType(Boolean)))

        Dim zdarmaParameter As ObjectParameter = If(zdarma.HasValue, New ObjectParameter("Zdarma", zdarma), New ObjectParameter("Zdarma", GetType(Boolean)))

        Dim navzdoryServisceUctovatParameter As ObjectParameter = If(navzdoryServisceUctovat.HasValue, New ObjectParameter("NavzdoryServisceUctovat", navzdoryServisceUctovat), New ObjectParameter("NavzdoryServisceUctovat", GetType(Boolean)))

        Dim najetoKMParameter As ObjectParameter = If(najetoKM.HasValue, New ObjectParameter("NajetoKM", najetoKM), New ObjectParameter("NajetoKM", GetType(Decimal)))

        Dim rr_HodinoveUctovaniParameter As ObjectParameter = If(rr_HodinoveUctovani.HasValue, New ObjectParameter("rr_HodinoveUctovani", rr_HodinoveUctovani), New ObjectParameter("rr_HodinoveUctovani", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddOrEditVykazPracePol", iDVykazPraceParameter, iDVykazPracePolParameter, iDUserUpravilParameter, rr_TypPolozkyPracakuParameter, casOdParameter, casDoParameter, hodinParameter, iDTechnikaParameter, produktParameter, textNaFakturuParameter, textInterniDoMailuParameter, pocetEMJParameter, cenaEMJParameter, vzdalenkaParameter, zdarmaParameter, navzdoryServisceUctovatParameter, najetoKMParameter, rr_HodinoveUctovaniParameter, iDVykazPracePolNEW, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_EditFirmaParametry(iDFirmaParametr As Nullable(Of Integer), platnostOd As Nullable(Of Date), hodinovaSazba As Nullable(Of Decimal), sazbaKm As Nullable(Of Decimal), rr_TypServisniSmlouvy As Nullable(Of Byte), serviskaCenaMesicne As Nullable(Of Decimal), serviskaNaposledyVyuctovana As Nullable(Of Date), serviskaIntervalObnoveni As Nullable(Of Byte), serviskaVolneHodiny As Nullable(Of Byte), sazbaMalyZasah As Nullable(Of Decimal), sazbaVelkyZasah As Nullable(Of Decimal), iDUser As Nullable(Of Integer)) As Integer
        Dim iDFirmaParametrParameter As ObjectParameter = If(iDFirmaParametr.HasValue, New ObjectParameter("IDFirmaParametr", iDFirmaParametr), New ObjectParameter("IDFirmaParametr", GetType(Integer)))

        Dim platnostOdParameter As ObjectParameter = If(platnostOd.HasValue, New ObjectParameter("PlatnostOd", platnostOd), New ObjectParameter("PlatnostOd", GetType(Date)))

        Dim hodinovaSazbaParameter As ObjectParameter = If(hodinovaSazba.HasValue, New ObjectParameter("HodinovaSazba", hodinovaSazba), New ObjectParameter("HodinovaSazba", GetType(Decimal)))

        Dim sazbaKmParameter As ObjectParameter = If(sazbaKm.HasValue, New ObjectParameter("SazbaKm", sazbaKm), New ObjectParameter("SazbaKm", GetType(Decimal)))

        Dim rr_TypServisniSmlouvyParameter As ObjectParameter = If(rr_TypServisniSmlouvy.HasValue, New ObjectParameter("rr_TypServisniSmlouvy", rr_TypServisniSmlouvy), New ObjectParameter("rr_TypServisniSmlouvy", GetType(Byte)))

        Dim serviskaCenaMesicneParameter As ObjectParameter = If(serviskaCenaMesicne.HasValue, New ObjectParameter("ServiskaCenaMesicne", serviskaCenaMesicne), New ObjectParameter("ServiskaCenaMesicne", GetType(Decimal)))

        Dim serviskaNaposledyVyuctovanaParameter As ObjectParameter = If(serviskaNaposledyVyuctovana.HasValue, New ObjectParameter("ServiskaNaposledyVyuctovana", serviskaNaposledyVyuctovana), New ObjectParameter("ServiskaNaposledyVyuctovana", GetType(Date)))

        Dim serviskaIntervalObnoveniParameter As ObjectParameter = If(serviskaIntervalObnoveni.HasValue, New ObjectParameter("ServiskaIntervalObnoveni", serviskaIntervalObnoveni), New ObjectParameter("ServiskaIntervalObnoveni", GetType(Byte)))

        Dim serviskaVolneHodinyParameter As ObjectParameter = If(serviskaVolneHodiny.HasValue, New ObjectParameter("ServiskaVolneHodiny", serviskaVolneHodiny), New ObjectParameter("ServiskaVolneHodiny", GetType(Byte)))

        Dim sazbaMalyZasahParameter As ObjectParameter = If(sazbaMalyZasah.HasValue, New ObjectParameter("SazbaMalyZasah", sazbaMalyZasah), New ObjectParameter("SazbaMalyZasah", GetType(Decimal)))

        Dim sazbaVelkyZasahParameter As ObjectParameter = If(sazbaVelkyZasah.HasValue, New ObjectParameter("SazbaVelkyZasah", sazbaVelkyZasah), New ObjectParameter("SazbaVelkyZasah", GetType(Decimal)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_EditFirmaParametry", iDFirmaParametrParameter, platnostOdParameter, hodinovaSazbaParameter, sazbaKmParameter, rr_TypServisniSmlouvyParameter, serviskaCenaMesicneParameter, serviskaNaposledyVyuctovanaParameter, serviskaIntervalObnoveniParameter, serviskaVolneHodinyParameter, sazbaMalyZasahParameter, sazbaVelkyZasahParameter, iDUserParameter)
    End Function

    Public Overridable Function AGsp_GetFA_Polozky(iDVykazPrace As Nullable(Of Integer)) As ObjectResult(Of AGsp_GetFA_Polozky_Result)
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFA_Polozky_Result)("AGsp_GetFA_Polozky", iDVykazPraceParameter)
    End Function

    Public Overridable Function AGsp_HledejSluzbaFullText(hledej As String) As ObjectResult(Of AGsp_HledejSluzbaFullText_Result)
        Dim hledejParameter As ObjectParameter = If(hledej IsNot Nothing, New ObjectParameter("Hledej", hledej), New ObjectParameter("Hledej", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_HledejSluzbaFullText_Result)("AGsp_HledejSluzbaFullText", hledejParameter)
    End Function

    Public Overridable Function AGsp_Run_Pracak00to50(iDVykazPrace As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Run_Pracak00to50", iDVykazPraceParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_AddSluzbaPreddefinovana(produkt As String, popis As String, carovy_kod As String, jednotky As String, dodavatel As String, cenaProdejni As Nullable(Of Decimal), poznamka As String, zarazeni As String, povedloSe As ObjectParameter, hlaseni As ObjectParameter) As Integer
        Dim produktParameter As ObjectParameter = If(produkt IsNot Nothing, New ObjectParameter("Produkt", produkt), New ObjectParameter("Produkt", GetType(String)))

        Dim popisParameter As ObjectParameter = If(popis IsNot Nothing, New ObjectParameter("Popis", popis), New ObjectParameter("Popis", GetType(String)))

        Dim carovy_kodParameter As ObjectParameter = If(carovy_kod IsNot Nothing, New ObjectParameter("Carovy_kod", carovy_kod), New ObjectParameter("Carovy_kod", GetType(String)))

        Dim jednotkyParameter As ObjectParameter = If(jednotky IsNot Nothing, New ObjectParameter("Jednotky", jednotky), New ObjectParameter("Jednotky", GetType(String)))

        Dim dodavatelParameter As ObjectParameter = If(dodavatel IsNot Nothing, New ObjectParameter("Dodavatel", dodavatel), New ObjectParameter("Dodavatel", GetType(String)))

        Dim cenaProdejniParameter As ObjectParameter = If(cenaProdejni.HasValue, New ObjectParameter("CenaProdejni", cenaProdejni), New ObjectParameter("CenaProdejni", GetType(Decimal)))

        Dim poznamkaParameter As ObjectParameter = If(poznamka IsNot Nothing, New ObjectParameter("Poznamka", poznamka), New ObjectParameter("Poznamka", GetType(String)))

        Dim zarazeniParameter As ObjectParameter = If(zarazeni IsNot Nothing, New ObjectParameter("Zarazeni", zarazeni), New ObjectParameter("Zarazeni", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddSluzbaPreddefinovana", produktParameter, popisParameter, carovy_kodParameter, jednotkyParameter, dodavatelParameter, cenaProdejniParameter, poznamkaParameter, zarazeniParameter, povedloSe, hlaseni)
    End Function

    Public Overridable Function AGsp_EditSluzbaPreddefinovana(produkt As String, popis As String, carovy_kod As String, jednotky As String, cenaProdejni As Nullable(Of Decimal), poznamka As String, zarazeni As String, povedloSe As ObjectParameter, hlaseni As ObjectParameter) As Integer
        Dim produktParameter As ObjectParameter = If(produkt IsNot Nothing, New ObjectParameter("Produkt", produkt), New ObjectParameter("Produkt", GetType(String)))

        Dim popisParameter As ObjectParameter = If(popis IsNot Nothing, New ObjectParameter("Popis", popis), New ObjectParameter("Popis", GetType(String)))

        Dim carovy_kodParameter As ObjectParameter = If(carovy_kod IsNot Nothing, New ObjectParameter("Carovy_kod", carovy_kod), New ObjectParameter("Carovy_kod", GetType(String)))

        Dim jednotkyParameter As ObjectParameter = If(jednotky IsNot Nothing, New ObjectParameter("Jednotky", jednotky), New ObjectParameter("Jednotky", GetType(String)))

        Dim cenaProdejniParameter As ObjectParameter = If(cenaProdejni.HasValue, New ObjectParameter("CenaProdejni", cenaProdejni), New ObjectParameter("CenaProdejni", GetType(Decimal)))

        Dim poznamkaParameter As ObjectParameter = If(poznamka IsNot Nothing, New ObjectParameter("Poznamka", poznamka), New ObjectParameter("Poznamka", GetType(String)))

        Dim zarazeniParameter As ObjectParameter = If(zarazeni IsNot Nothing, New ObjectParameter("Zarazeni", zarazeni), New ObjectParameter("Zarazeni", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_EditSluzbaPreddefinovana", produktParameter, popisParameter, carovy_kodParameter, jednotkyParameter, cenaProdejniParameter, poznamkaParameter, zarazeniParameter, povedloSe, hlaseni)
    End Function

    Public Overridable Function AGsp_GetSluzbyPreddefinovane() As ObjectResult(Of AGsp_GetSluzbyPreddefinovane_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetSluzbyPreddefinovane_Result)("AGsp_GetSluzbyPreddefinovane")
    End Function

    Public Overridable Function AGsp_GetFA_CilovaAVISFirma(iDVykazPrace As Nullable(Of Integer), rr_FakturovatNaFirmu As ObjectParameter, pocetDEalsichFaktur As ObjectParameter, firma As ObjectParameter) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_GetFA_CilovaAVISFirma", iDVykazPraceParameter, rr_FakturovatNaFirmu, pocetDEalsichFaktur, firma)
    End Function

    Public Overridable Function AGsp_AddMegaObjednavkaPol(polozky As String) As Integer
        Dim polozkyParameter As ObjectParameter = If(polozky IsNot Nothing, New ObjectParameter("Polozky", polozky), New ObjectParameter("Polozky", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddMegaObjednavkaPol", polozkyParameter)
    End Function

    Public Overridable Function AGsp_DelMegaPolozku(iDMega As Nullable(Of Long)) As Integer
        Dim iDMegaParameter As ObjectParameter = If(iDMega.HasValue, New ObjectParameter("IDMega", iDMega), New ObjectParameter("IDMega", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_DelMegaPolozku", iDMegaParameter)
    End Function

    Public Overridable Function AGsp_GetMegaPolSeznam() As ObjectResult(Of AGsp_GetMegaPolSeznam_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetMegaPolSeznam_Result)("AGsp_GetMegaPolSeznam")
    End Function

    Public Overridable Function AGsp_EditMegaPol(iDMega As Nullable(Of Long), megaCelkovaCena As Nullable(Of Decimal), dohodnutaProdejniCenaEMJ As Nullable(Of Decimal), poznamka As String) As Integer
        Dim iDMegaParameter As ObjectParameter = If(iDMega.HasValue, New ObjectParameter("IDMega", iDMega), New ObjectParameter("IDMega", GetType(Long)))

        Dim megaCelkovaCenaParameter As ObjectParameter = If(megaCelkovaCena.HasValue, New ObjectParameter("MegaCelkovaCena", megaCelkovaCena), New ObjectParameter("MegaCelkovaCena", GetType(Decimal)))

        Dim dohodnutaProdejniCenaEMJParameter As ObjectParameter = If(dohodnutaProdejniCenaEMJ.HasValue, New ObjectParameter("DohodnutaProdejniCenaEMJ", dohodnutaProdejniCenaEMJ), New ObjectParameter("DohodnutaProdejniCenaEMJ", GetType(Decimal)))

        Dim poznamkaParameter As ObjectParameter = If(poznamka IsNot Nothing, New ObjectParameter("Poznamka", poznamka), New ObjectParameter("Poznamka", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_EditMegaPol", iDMegaParameter, megaCelkovaCenaParameter, dohodnutaProdejniCenaEMJParameter, poznamkaParameter)
    End Function

    Public Overridable Function AGsp_Run_Pracak00to10(iDVykazPrace As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Run_Pracak00to10", iDVykazPraceParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_AddMegaFakturaPol(polozky As String) As Integer
        Dim polozkyParameter As ObjectParameter = If(polozky IsNot Nothing, New ObjectParameter("Polozky", polozky), New ObjectParameter("Polozky", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddMegaFakturaPol", polozkyParameter)
    End Function

    Public Overridable Function AGsp_AddNewPracakyPolozkaProduktZablokovat(iDVykazPrace As Nullable(Of Integer), produkt As String, blokovatEMJ As Nullable(Of Decimal), cenaEMJProdejni As Nullable(Of Decimal), iDUserUpravil As Nullable(Of Integer), preferovatCerpaniZ_IDPrijemkaPol As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Dim produktParameter As ObjectParameter = If(produkt IsNot Nothing, New ObjectParameter("Produkt", produkt), New ObjectParameter("Produkt", GetType(String)))

        Dim blokovatEMJParameter As ObjectParameter = If(blokovatEMJ.HasValue, New ObjectParameter("BlokovatEMJ", blokovatEMJ), New ObjectParameter("BlokovatEMJ", GetType(Decimal)))

        Dim cenaEMJProdejniParameter As ObjectParameter = If(cenaEMJProdejni.HasValue, New ObjectParameter("CenaEMJProdejni", cenaEMJProdejni), New ObjectParameter("CenaEMJProdejni", GetType(Decimal)))

        Dim iDUserUpravilParameter As ObjectParameter = If(iDUserUpravil.HasValue, New ObjectParameter("IDUserUpravil", iDUserUpravil), New ObjectParameter("IDUserUpravil", GetType(Integer)))

        Dim preferovatCerpaniZ_IDPrijemkaPolParameter As ObjectParameter = If(preferovatCerpaniZ_IDPrijemkaPol.HasValue, New ObjectParameter("PreferovatCerpaniZ_IDPrijemkaPol", preferovatCerpaniZ_IDPrijemkaPol), New ObjectParameter("PreferovatCerpaniZ_IDPrijemkaPol", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddNewPracakyPolozkaProduktZablokovat", iDVykazPraceParameter, produktParameter, blokovatEMJParameter, cenaEMJProdejniParameter, iDUserUpravilParameter, preferovatCerpaniZ_IDPrijemkaPolParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_GetFA_Hlavicka(iDVykazPrace As Nullable(Of Integer), lastLapse As ObjectParameter) As ObjectResult(Of AGsp_GetFA_Hlavicka_Result5)
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFA_Hlavicka_Result5)("AGsp_GetFA_Hlavicka", iDVykazPraceParameter, lastLapse)
    End Function

    Public Overridable Function AGsp_GetPracakPolozkyNahled(iDVykazPrace As Nullable(Of Integer)) As ObjectResult(Of AGsp_GetPracakPolozkyNahled_Result)
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetPracakPolozkyNahled_Result)("AGsp_GetPracakPolozkyNahled", iDVykazPraceParameter)
    End Function

    Public Overridable Function AGsp_GetPuvodPolozkyNaPracaku(iDVykazPracePol As Nullable(Of Integer)) As ObjectResult(Of AGsp_GetPuvodPolozkyNaPracaku_Result)
        Dim iDVykazPracePolParameter As ObjectParameter = If(iDVykazPracePol.HasValue, New ObjectParameter("IDVykazPracePol", iDVykazPracePol), New ObjectParameter("IDVykazPracePol", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetPuvodPolozkyNaPracaku_Result)("AGsp_GetPuvodPolozkyNaPracaku", iDVykazPracePolParameter)
    End Function

    Public Overridable Function AGsp_GetInventurniStav() As ObjectResult(Of AGsp_GetInventurniStav_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetInventurniStav_Result)("AGsp_GetInventurniStav")
    End Function

    Public Overridable Function AGsp_UTIL_Do_UvolnitSekleLicence() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_UTIL_Do_UvolnitSekleLicence")
    End Function

    Public Overridable Function AGsp_AddOrEditFirmyRecordHistory(iDFirmyRecordHistory As Nullable(Of Integer), iDFirmy As String, recordCommentType As String, recordCommentTxt As String, iDUser As Nullable(Of Integer), newIDFirmyRecordHistory As ObjectParameter) As Integer
        Dim iDFirmyRecordHistoryParameter As ObjectParameter = If(iDFirmyRecordHistory.HasValue, New ObjectParameter("IDFirmyRecordHistory", iDFirmyRecordHistory), New ObjectParameter("IDFirmyRecordHistory", GetType(Integer)))

        Dim iDFirmyParameter As ObjectParameter = If(iDFirmy IsNot Nothing, New ObjectParameter("IDFirmy", iDFirmy), New ObjectParameter("IDFirmy", GetType(String)))

        Dim recordCommentTypeParameter As ObjectParameter = If(recordCommentType IsNot Nothing, New ObjectParameter("RecordCommentType", recordCommentType), New ObjectParameter("RecordCommentType", GetType(String)))

        Dim recordCommentTxtParameter As ObjectParameter = If(recordCommentTxt IsNot Nothing, New ObjectParameter("RecordCommentTxt", recordCommentTxt), New ObjectParameter("RecordCommentTxt", GetType(String)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_AddOrEditFirmyRecordHistory", iDFirmyRecordHistoryParameter, iDFirmyParameter, recordCommentTypeParameter, recordCommentTxtParameter, iDUserParameter, newIDFirmyRecordHistory)
    End Function

    Public Overridable Function AGsp_GetFirmyRecordHistorySeznam(iDFirmy As String) As ObjectResult(Of AGsp_GetFirmyRecordHistorySeznam_Result)
        Dim iDFirmyParameter As ObjectParameter = If(iDFirmy IsNot Nothing, New ObjectParameter("IDFirmy", iDFirmy), New ObjectParameter("IDFirmy", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetFirmyRecordHistorySeznam_Result)("AGsp_GetFirmyRecordHistorySeznam", iDFirmyParameter)
    End Function

    Public Overridable Function AGsp_FA_MailTextyPolozek(iDVykazPrace As Nullable(Of Integer)) As ObjectResult(Of AGsp_FA_MailTextyPolozek_Result)
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_FA_MailTextyPolozek_Result)("AGsp_FA_MailTextyPolozek", iDVykazPraceParameter)
    End Function

    Public Overridable Function AGsp_Do_IUTicket(iDTicket As Nullable(Of Integer), firma As String, emailOdesilatele As String, emailKopie As String, casVytvoreni As Nullable(Of Date), iDUserVytvoril As Nullable(Of Integer), iDUserResitel As Nullable(Of Integer), casResitelPrevzal As Nullable(Of Date), datumDeadLine As Nullable(Of Date), predmet As String, telo As String, interniPoznamka As String, rr_TicketStav As Nullable(Of Byte), rr_TicketPriorita As Nullable(Of Byte), lL_LastLapse As ObjectParameter) As Integer
        Dim iDTicketParameter As ObjectParameter = If(iDTicket.HasValue, New ObjectParameter("IDTicket", iDTicket), New ObjectParameter("IDTicket", GetType(Integer)))

        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim emailOdesilateleParameter As ObjectParameter = If(emailOdesilatele IsNot Nothing, New ObjectParameter("EmailOdesilatele", emailOdesilatele), New ObjectParameter("EmailOdesilatele", GetType(String)))

        Dim emailKopieParameter As ObjectParameter = If(emailKopie IsNot Nothing, New ObjectParameter("EmailKopie", emailKopie), New ObjectParameter("EmailKopie", GetType(String)))

        Dim casVytvoreniParameter As ObjectParameter = If(casVytvoreni.HasValue, New ObjectParameter("CasVytvoreni", casVytvoreni), New ObjectParameter("CasVytvoreni", GetType(Date)))

        Dim iDUserVytvorilParameter As ObjectParameter = If(iDUserVytvoril.HasValue, New ObjectParameter("IDUserVytvoril", iDUserVytvoril), New ObjectParameter("IDUserVytvoril", GetType(Integer)))

        Dim iDUserResitelParameter As ObjectParameter = If(iDUserResitel.HasValue, New ObjectParameter("IDUserResitel", iDUserResitel), New ObjectParameter("IDUserResitel", GetType(Integer)))

        Dim casResitelPrevzalParameter As ObjectParameter = If(casResitelPrevzal.HasValue, New ObjectParameter("CasResitelPrevzal", casResitelPrevzal), New ObjectParameter("CasResitelPrevzal", GetType(Date)))

        Dim datumDeadLineParameter As ObjectParameter = If(datumDeadLine.HasValue, New ObjectParameter("DatumDeadLine", datumDeadLine), New ObjectParameter("DatumDeadLine", GetType(Date)))

        Dim predmetParameter As ObjectParameter = If(predmet IsNot Nothing, New ObjectParameter("Predmet", predmet), New ObjectParameter("Predmet", GetType(String)))

        Dim teloParameter As ObjectParameter = If(telo IsNot Nothing, New ObjectParameter("Telo", telo), New ObjectParameter("Telo", GetType(String)))

        Dim interniPoznamkaParameter As ObjectParameter = If(interniPoznamka IsNot Nothing, New ObjectParameter("InterniPoznamka", interniPoznamka), New ObjectParameter("InterniPoznamka", GetType(String)))

        Dim rr_TicketStavParameter As ObjectParameter = If(rr_TicketStav.HasValue, New ObjectParameter("rr_TicketStav", rr_TicketStav), New ObjectParameter("rr_TicketStav", GetType(Byte)))

        Dim rr_TicketPrioritaParameter As ObjectParameter = If(rr_TicketPriorita.HasValue, New ObjectParameter("rr_TicketPriorita", rr_TicketPriorita), New ObjectParameter("rr_TicketPriorita", GetType(Byte)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_IUTicket", iDTicketParameter, firmaParameter, emailOdesilateleParameter, emailKopieParameter, casVytvoreniParameter, iDUserVytvorilParameter, iDUserResitelParameter, casResitelPrevzalParameter, datumDeadLineParameter, predmetParameter, teloParameter, interniPoznamkaParameter, rr_TicketStavParameter, rr_TicketPrioritaParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_TicketDetail(iDTicket As Nullable(Of Integer)) As ObjectResult(Of AGsp_Get_TicketDetail_Result)
        Dim iDTicketParameter As ObjectParameter = If(iDTicket.HasValue, New ObjectParameter("IDTicket", iDTicket), New ObjectParameter("IDTicket", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_TicketDetail_Result)("AGsp_Get_TicketDetail", iDTicketParameter)
    End Function

    Public Overridable Function AGsp_Do_ITicketZapisDoHistorie(iDTicket As Nullable(Of Integer), komentar As String, lL_LastLapse As ObjectParameter) As Integer
        Dim iDTicketParameter As ObjectParameter = If(iDTicket.HasValue, New ObjectParameter("IDTicket", iDTicket), New ObjectParameter("IDTicket", GetType(Integer)))

        Dim komentarParameter As ObjectParameter = If(komentar IsNot Nothing, New ObjectParameter("Komentar", komentar), New ObjectParameter("Komentar", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_ITicketZapisDoHistorie", iDTicketParameter, komentarParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_TicketHistorie(iDTicket As Nullable(Of Integer)) As ObjectResult(Of AGsp_Get_TicketHistorie_Result)
        Dim iDTicketParameter As ObjectParameter = If(iDTicket.HasValue, New ObjectParameter("IDTicket", iDTicket), New ObjectParameter("IDTicket", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_TicketHistorie_Result)("AGsp_Get_TicketHistorie", iDTicketParameter)
    End Function

    Public Overridable Function AGsp_Do_IU_SmlouvaServisniProvizeDef(iDSSProvizeDef As Nullable(Of Integer), iDSmlouvy As Nullable(Of Integer), iDUserTechnika As Nullable(Of Integer), rr_SSTypProvize As Nullable(Of Short), fixniCastka As Nullable(Of Decimal), procentoProvizeSS As Nullable(Of Decimal), new_IDSSProvizeDef As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDSSProvizeDefParameter As ObjectParameter = If(iDSSProvizeDef.HasValue, New ObjectParameter("IDSSProvizeDef", iDSSProvizeDef), New ObjectParameter("IDSSProvizeDef", GetType(Integer)))

        Dim iDSmlouvyParameter As ObjectParameter = If(iDSmlouvy.HasValue, New ObjectParameter("IDSmlouvy", iDSmlouvy), New ObjectParameter("IDSmlouvy", GetType(Integer)))

        Dim iDUserTechnikaParameter As ObjectParameter = If(iDUserTechnika.HasValue, New ObjectParameter("IDUserTechnika", iDUserTechnika), New ObjectParameter("IDUserTechnika", GetType(Integer)))

        Dim rr_SSTypProvizeParameter As ObjectParameter = If(rr_SSTypProvize.HasValue, New ObjectParameter("rr_SSTypProvize", rr_SSTypProvize), New ObjectParameter("rr_SSTypProvize", GetType(Short)))

        Dim fixniCastkaParameter As ObjectParameter = If(fixniCastka.HasValue, New ObjectParameter("FixniCastka", fixniCastka), New ObjectParameter("FixniCastka", GetType(Decimal)))

        Dim procentoProvizeSSParameter As ObjectParameter = If(procentoProvizeSS.HasValue, New ObjectParameter("ProcentoProvizeSS", procentoProvizeSS), New ObjectParameter("ProcentoProvizeSS", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_IU_SmlouvaServisniProvizeDef", iDSSProvizeDefParameter, iDSmlouvyParameter, iDUserTechnikaParameter, rr_SSTypProvizeParameter, fixniCastkaParameter, procentoProvizeSSParameter, new_IDSSProvizeDef, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_SmlouvyServisniProvizeDefSeznam(iDUser As Nullable(Of Integer)) As ObjectResult(Of AGsp_Get_SmlouvyServisniProvizeDefSeznam_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_SmlouvyServisniProvizeDefSeznam_Result)("AGsp_Get_SmlouvyServisniProvizeDefSeznam", iDUserParameter)
    End Function

    Public Overridable Function AGsp_Do_SmlouvyServisniGenerujMesicniPausalky(uctovanyMesic As Nullable(Of Date), iDUser As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim uctovanyMesicParameter As ObjectParameter = If(uctovanyMesic.HasValue, New ObjectParameter("UctovanyMesic", uctovanyMesic), New ObjectParameter("UctovanyMesic", GetType(Date)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_SmlouvyServisniGenerujMesicniPausalky", uctovanyMesicParameter, iDUserParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_SmlouvyServisniGenerovanePausalky() As ObjectResult(Of AGsp_Get_SmlouvyServisniGenerovanePausalky_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_SmlouvyServisniGenerovanePausalky_Result)("AGsp_Get_SmlouvyServisniGenerovanePausalky")
    End Function

    Public Overridable Function AGsp_Do_SmlouvyServisniPriznatTechnikoviProvize(iDMesicnihoVyuctovani As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDMesicnihoVyuctovaniParameter As ObjectParameter = If(iDMesicnihoVyuctovani.HasValue, New ObjectParameter("IDMesicnihoVyuctovani", iDMesicnihoVyuctovani), New ObjectParameter("IDMesicnihoVyuctovani", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_SmlouvyServisniPriznatTechnikoviProvize", iDMesicnihoVyuctovaniParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Do_VyuctovaniDoplnitUctovaciObdobi(lL_LastLapse As ObjectParameter) As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_VyuctovaniDoplnitUctovaciObdobi", lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Do_IU_SmlouvaServisni(iDSmlouvy As Nullable(Of Integer), firma As String, nazevSmlouvy As String, rr_TypServisniSmlouvy As Nullable(Of Short), rr_IntervalFakturaceSS As Nullable(Of Byte), mesicniSazbaBezDPH As Nullable(Of Decimal), platiOd As Nullable(Of Date), ukoncenaKeDni As Nullable(Of Date), textNafakturu As String, iDUserUpravil As Nullable(Of Integer), rr_FakturovatNaFirmu As Nullable(Of Byte), newIDSmlouvy As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDSmlouvyParameter As ObjectParameter = If(iDSmlouvy.HasValue, New ObjectParameter("IDSmlouvy", iDSmlouvy), New ObjectParameter("IDSmlouvy", GetType(Integer)))

        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim nazevSmlouvyParameter As ObjectParameter = If(nazevSmlouvy IsNot Nothing, New ObjectParameter("NazevSmlouvy", nazevSmlouvy), New ObjectParameter("NazevSmlouvy", GetType(String)))

        Dim rr_TypServisniSmlouvyParameter As ObjectParameter = If(rr_TypServisniSmlouvy.HasValue, New ObjectParameter("rr_TypServisniSmlouvy", rr_TypServisniSmlouvy), New ObjectParameter("rr_TypServisniSmlouvy", GetType(Short)))

        Dim rr_IntervalFakturaceSSParameter As ObjectParameter = If(rr_IntervalFakturaceSS.HasValue, New ObjectParameter("rr_IntervalFakturaceSS", rr_IntervalFakturaceSS), New ObjectParameter("rr_IntervalFakturaceSS", GetType(Byte)))

        Dim mesicniSazbaBezDPHParameter As ObjectParameter = If(mesicniSazbaBezDPH.HasValue, New ObjectParameter("MesicniSazbaBezDPH", mesicniSazbaBezDPH), New ObjectParameter("MesicniSazbaBezDPH", GetType(Decimal)))

        Dim platiOdParameter As ObjectParameter = If(platiOd.HasValue, New ObjectParameter("PlatiOd", platiOd), New ObjectParameter("PlatiOd", GetType(Date)))

        Dim ukoncenaKeDniParameter As ObjectParameter = If(ukoncenaKeDni.HasValue, New ObjectParameter("UkoncenaKeDni", ukoncenaKeDni), New ObjectParameter("UkoncenaKeDni", GetType(Date)))

        Dim textNafakturuParameter As ObjectParameter = If(textNafakturu IsNot Nothing, New ObjectParameter("TextNafakturu", textNafakturu), New ObjectParameter("TextNafakturu", GetType(String)))

        Dim iDUserUpravilParameter As ObjectParameter = If(iDUserUpravil.HasValue, New ObjectParameter("IDUserUpravil", iDUserUpravil), New ObjectParameter("IDUserUpravil", GetType(Integer)))

        Dim rr_FakturovatNaFirmuParameter As ObjectParameter = If(rr_FakturovatNaFirmu.HasValue, New ObjectParameter("rr_FakturovatNaFirmu", rr_FakturovatNaFirmu), New ObjectParameter("rr_FakturovatNaFirmu", GetType(Byte)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_IU_SmlouvaServisni", iDSmlouvyParameter, firmaParameter, nazevSmlouvyParameter, rr_TypServisniSmlouvyParameter, rr_IntervalFakturaceSSParameter, mesicniSazbaBezDPHParameter, platiOdParameter, ukoncenaKeDniParameter, textNafakturuParameter, iDUserUpravilParameter, rr_FakturovatNaFirmuParameter, newIDSmlouvy, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_SmlouvyServisniSeznam() As ObjectResult(Of AGsp_Get_SmlouvyServisniSeznam_Result1)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_SmlouvyServisniSeznam_Result1)("AGsp_Get_SmlouvyServisniSeznam")
    End Function

    Public Overridable Function AGsp_Get_SmlouvyServisniDatumDalsihoObdobi() As ObjectResult(Of AGsp_Get_SmlouvyServisniDatumDalsihoObdobi_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_SmlouvyServisniDatumDalsihoObdobi_Result)("AGsp_Get_SmlouvyServisniDatumDalsihoObdobi")
    End Function

    Public Overridable Function AGsp_Do_IUPraceNaProjektu(iDPraceNaProjektu As Nullable(Of Integer), iDUser As Nullable(Of Integer), iDProjektu As Nullable(Of Integer), placenaCinnost As Nullable(Of Boolean), mereniUkonceno As Nullable(Of Boolean), popisCinnosti As String, new_IDPraceNaProjektu As ObjectParameter, lL_LastLapseText As ObjectParameter) As Integer
        Dim iDPraceNaProjektuParameter As ObjectParameter = If(iDPraceNaProjektu.HasValue, New ObjectParameter("IDPraceNaProjektu", iDPraceNaProjektu), New ObjectParameter("IDPraceNaProjektu", GetType(Integer)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim iDProjektuParameter As ObjectParameter = If(iDProjektu.HasValue, New ObjectParameter("IDProjektu", iDProjektu), New ObjectParameter("IDProjektu", GetType(Integer)))

        Dim placenaCinnostParameter As ObjectParameter = If(placenaCinnost.HasValue, New ObjectParameter("PlacenaCinnost", placenaCinnost), New ObjectParameter("PlacenaCinnost", GetType(Boolean)))

        Dim mereniUkoncenoParameter As ObjectParameter = If(mereniUkonceno.HasValue, New ObjectParameter("MereniUkonceno", mereniUkonceno), New ObjectParameter("MereniUkonceno", GetType(Boolean)))

        Dim popisCinnostiParameter As ObjectParameter = If(popisCinnosti IsNot Nothing, New ObjectParameter("PopisCinnosti", popisCinnosti), New ObjectParameter("PopisCinnosti", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_IUPraceNaProjektu", iDPraceNaProjektuParameter, iDUserParameter, iDProjektuParameter, placenaCinnostParameter, mereniUkoncenoParameter, popisCinnostiParameter, new_IDPraceNaProjektu, lL_LastLapseText)
    End Function

    Public Overridable Function AGsp_Do_IUPraceNaProjektuProjekt(iDProjektu As Nullable(Of Integer), nazevProjektu As String, ukoncenyProjekt As Nullable(Of Boolean), barva As String, new_IDProjektu As ObjectParameter, lL_LastLapseText As ObjectParameter) As Integer
        Dim iDProjektuParameter As ObjectParameter = If(iDProjektu.HasValue, New ObjectParameter("IDProjektu", iDProjektu), New ObjectParameter("IDProjektu", GetType(Integer)))

        Dim nazevProjektuParameter As ObjectParameter = If(nazevProjektu IsNot Nothing, New ObjectParameter("NazevProjektu", nazevProjektu), New ObjectParameter("NazevProjektu", GetType(String)))

        Dim ukoncenyProjektParameter As ObjectParameter = If(ukoncenyProjekt.HasValue, New ObjectParameter("UkoncenyProjekt", ukoncenyProjekt), New ObjectParameter("UkoncenyProjekt", GetType(Boolean)))

        Dim barvaParameter As ObjectParameter = If(barva IsNot Nothing, New ObjectParameter("Barva", barva), New ObjectParameter("Barva", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_IUPraceNaProjektuProjekt", iDProjektuParameter, nazevProjektuParameter, ukoncenyProjektParameter, barvaParameter, new_IDProjektu, lL_LastLapseText)
    End Function

    Public Overridable Function AGsp_Get_PraceNaProjektuSeznamPoslednichProjektu(iDUser As Nullable(Of Integer)) As ObjectResult(Of AGsp_Get_PraceNaProjektuSeznamPoslednichProjektu_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_PraceNaProjektuSeznamPoslednichProjektu_Result)("AGsp_Get_PraceNaProjektuSeznamPoslednichProjektu", iDUserParameter)
    End Function

    Public Overridable Function AGsp_Get_PraceNaProjektuSeznamVsechProjektu() As ObjectResult(Of AGsp_Get_PraceNaProjektuSeznamVsechProjektu_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_PraceNaProjektuSeznamVsechProjektu_Result)("AGsp_Get_PraceNaProjektuSeznamVsechProjektu")
    End Function

    Public Overridable Function AGsp_Get_PraceNaProjektechGraficky(iDUser As Nullable(Of Integer), obdobiOd As Nullable(Of Date), obdobiDo As Nullable(Of Date)) As ObjectResult(Of AGsp_Get_PraceNaProjektechGraficky_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim obdobiOdParameter As ObjectParameter = If(obdobiOd.HasValue, New ObjectParameter("ObdobiOd", obdobiOd), New ObjectParameter("ObdobiOd", GetType(Date)))

        Dim obdobiDoParameter As ObjectParameter = If(obdobiDo.HasValue, New ObjectParameter("ObdobiDo", obdobiDo), New ObjectParameter("ObdobiDo", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_PraceNaProjektechGraficky_Result)("AGsp_Get_PraceNaProjektechGraficky", iDUserParameter, obdobiOdParameter, obdobiDoParameter)
    End Function

    Public Overridable Function AGsp_Do_UFirmaZneviditelnitFirmu(zneviditelnit As Nullable(Of Boolean), firma As String) As Integer
        Dim zneviditelnitParameter As ObjectParameter = If(zneviditelnit.HasValue, New ObjectParameter("Zneviditelnit", zneviditelnit), New ObjectParameter("Zneviditelnit", GetType(Boolean)))

        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_UFirmaZneviditelnitFirmu", zneviditelnitParameter, firmaParameter)
    End Function

    Public Overridable Function AGsp_Get_TicketSeznam(iDTicket As Nullable(Of Integer), iDUser As Nullable(Of Integer), rr_TicketStav As Nullable(Of Byte)) As ObjectResult(Of AGsp_Get_TicketSeznam_Result)
        Dim iDTicketParameter As ObjectParameter = If(iDTicket.HasValue, New ObjectParameter("IDTicket", iDTicket), New ObjectParameter("IDTicket", GetType(Integer)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim rr_TicketStavParameter As ObjectParameter = If(rr_TicketStav.HasValue, New ObjectParameter("rr_TicketStav", rr_TicketStav), New ObjectParameter("rr_TicketStav", GetType(Byte)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_TicketSeznam_Result)("AGsp_Get_TicketSeznam", iDTicketParameter, iDUserParameter, rr_TicketStavParameter)
    End Function

    Public Overridable Function AGsp_Do_IUTicketRucne(iDTicket As Nullable(Of Integer), firma As String, pobocka As String, iDUserVytvoril As Nullable(Of Integer), iDUserResitel As Nullable(Of Integer), domluvenyTerminCas As Nullable(Of Date), domluvenyTerminCasDo As Nullable(Of Date), rr_DeadLine As Nullable(Of Byte), datumDeadLine As Nullable(Of Date), predmet As String, telo As String, interniPoznamka As String, rr_TicketPriorita As Nullable(Of Byte), udalostVGoogleCalend As Nullable(Of Boolean), iDGoogleCaledar As String, iDGoogleEvent As String, rr_LokalitaBarva As Nullable(Of Byte), barva As String, rr_TypZasahu As Nullable(Of Byte), odesilatKlientoviEmaily As Nullable(Of Boolean), rr_FakturovatNaFirmu As Nullable(Of Byte), new_IDTicket As ObjectParameter, emailKlienta As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDTicketParameter As ObjectParameter = If(iDTicket.HasValue, New ObjectParameter("IDTicket", iDTicket), New ObjectParameter("IDTicket", GetType(Integer)))

        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim pobockaParameter As ObjectParameter = If(pobocka IsNot Nothing, New ObjectParameter("Pobocka", pobocka), New ObjectParameter("Pobocka", GetType(String)))

        Dim iDUserVytvorilParameter As ObjectParameter = If(iDUserVytvoril.HasValue, New ObjectParameter("IDUserVytvoril", iDUserVytvoril), New ObjectParameter("IDUserVytvoril", GetType(Integer)))

        Dim iDUserResitelParameter As ObjectParameter = If(iDUserResitel.HasValue, New ObjectParameter("IDUserResitel", iDUserResitel), New ObjectParameter("IDUserResitel", GetType(Integer)))

        Dim domluvenyTerminCasParameter As ObjectParameter = If(domluvenyTerminCas.HasValue, New ObjectParameter("DomluvenyTerminCas", domluvenyTerminCas), New ObjectParameter("DomluvenyTerminCas", GetType(Date)))

        Dim domluvenyTerminCasDoParameter As ObjectParameter = If(domluvenyTerminCasDo.HasValue, New ObjectParameter("DomluvenyTerminCasDo", domluvenyTerminCasDo), New ObjectParameter("DomluvenyTerminCasDo", GetType(Date)))

        Dim rr_DeadLineParameter As ObjectParameter = If(rr_DeadLine.HasValue, New ObjectParameter("rr_DeadLine", rr_DeadLine), New ObjectParameter("rr_DeadLine", GetType(Byte)))

        Dim datumDeadLineParameter As ObjectParameter = If(datumDeadLine.HasValue, New ObjectParameter("DatumDeadLine", datumDeadLine), New ObjectParameter("DatumDeadLine", GetType(Date)))

        Dim predmetParameter As ObjectParameter = If(predmet IsNot Nothing, New ObjectParameter("Predmet", predmet), New ObjectParameter("Predmet", GetType(String)))

        Dim teloParameter As ObjectParameter = If(telo IsNot Nothing, New ObjectParameter("Telo", telo), New ObjectParameter("Telo", GetType(String)))

        Dim interniPoznamkaParameter As ObjectParameter = If(interniPoznamka IsNot Nothing, New ObjectParameter("InterniPoznamka", interniPoznamka), New ObjectParameter("InterniPoznamka", GetType(String)))

        Dim rr_TicketPrioritaParameter As ObjectParameter = If(rr_TicketPriorita.HasValue, New ObjectParameter("rr_TicketPriorita", rr_TicketPriorita), New ObjectParameter("rr_TicketPriorita", GetType(Byte)))

        Dim udalostVGoogleCalendParameter As ObjectParameter = If(udalostVGoogleCalend.HasValue, New ObjectParameter("UdalostVGoogleCalend", udalostVGoogleCalend), New ObjectParameter("UdalostVGoogleCalend", GetType(Boolean)))

        Dim iDGoogleCaledarParameter As ObjectParameter = If(iDGoogleCaledar IsNot Nothing, New ObjectParameter("IDGoogleCaledar", iDGoogleCaledar), New ObjectParameter("IDGoogleCaledar", GetType(String)))

        Dim iDGoogleEventParameter As ObjectParameter = If(iDGoogleEvent IsNot Nothing, New ObjectParameter("IDGoogleEvent", iDGoogleEvent), New ObjectParameter("IDGoogleEvent", GetType(String)))

        Dim rr_LokalitaBarvaParameter As ObjectParameter = If(rr_LokalitaBarva.HasValue, New ObjectParameter("rr_LokalitaBarva", rr_LokalitaBarva), New ObjectParameter("rr_LokalitaBarva", GetType(Byte)))

        Dim barvaParameter As ObjectParameter = If(barva IsNot Nothing, New ObjectParameter("Barva", barva), New ObjectParameter("Barva", GetType(String)))

        Dim rr_TypZasahuParameter As ObjectParameter = If(rr_TypZasahu.HasValue, New ObjectParameter("rr_TypZasahu", rr_TypZasahu), New ObjectParameter("rr_TypZasahu", GetType(Byte)))

        Dim odesilatKlientoviEmailyParameter As ObjectParameter = If(odesilatKlientoviEmaily.HasValue, New ObjectParameter("OdesilatKlientoviEmaily", odesilatKlientoviEmaily), New ObjectParameter("OdesilatKlientoviEmaily", GetType(Boolean)))

        Dim rr_FakturovatNaFirmuParameter As ObjectParameter = If(rr_FakturovatNaFirmu.HasValue, New ObjectParameter("rr_FakturovatNaFirmu", rr_FakturovatNaFirmu), New ObjectParameter("rr_FakturovatNaFirmu", GetType(Byte)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_IUTicketRucne", iDTicketParameter, firmaParameter, pobockaParameter, iDUserVytvorilParameter, iDUserResitelParameter, domluvenyTerminCasParameter, domluvenyTerminCasDoParameter, rr_DeadLineParameter, datumDeadLineParameter, predmetParameter, teloParameter, interniPoznamkaParameter, rr_TicketPrioritaParameter, udalostVGoogleCalendParameter, iDGoogleCaledarParameter, iDGoogleEventParameter, rr_LokalitaBarvaParameter, barvaParameter, rr_TypZasahuParameter, odesilatKlientoviEmailyParameter, rr_FakturovatNaFirmuParameter, new_IDTicket, emailKlienta, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Do_IPhoneCallToHistory(userLogin As String, phoneNumber As String, jmenoKontaktu As String, new_IDCall As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim userLoginParameter As ObjectParameter = If(userLogin IsNot Nothing, New ObjectParameter("UserLogin", userLogin), New ObjectParameter("UserLogin", GetType(String)))

        Dim phoneNumberParameter As ObjectParameter = If(phoneNumber IsNot Nothing, New ObjectParameter("PhoneNumber", phoneNumber), New ObjectParameter("PhoneNumber", GetType(String)))

        Dim jmenoKontaktuParameter As ObjectParameter = If(jmenoKontaktu IsNot Nothing, New ObjectParameter("JmenoKontaktu", jmenoKontaktu), New ObjectParameter("JmenoKontaktu", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_IPhoneCallToHistory", userLoginParameter, phoneNumberParameter, jmenoKontaktuParameter, new_IDCall, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_PhoneCallListUser(iDUser As Nullable(Of Integer)) As ObjectResult(Of AGsp_Get_PhoneCallListUser_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_PhoneCallListUser_Result)("AGsp_Get_PhoneCallListUser", iDUserParameter)
    End Function

    Public Overridable Function AGsp_Get_LokalitaBarvaProGoogleKal(iDUser As Nullable(Of Integer)) As ObjectResult(Of AGsp_Get_LokalitaBarvaProGoogleKal_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_LokalitaBarvaProGoogleKal_Result)("AGsp_Get_LokalitaBarvaProGoogleKal", iDUserParameter)
    End Function

    Public Overridable Function AGsp_Run_Ticket10to40(iDUser As Nullable(Of Integer), iDTicket As Nullable(Of Integer), ukoncitSPracakem As Nullable(Of Boolean), iDVykazPrace As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim iDTicketParameter As ObjectParameter = If(iDTicket.HasValue, New ObjectParameter("IDTicket", iDTicket), New ObjectParameter("IDTicket", GetType(Integer)))

        Dim ukoncitSPracakemParameter As ObjectParameter = If(ukoncitSPracakem.HasValue, New ObjectParameter("UkoncitSPracakem", ukoncitSPracakem), New ObjectParameter("UkoncitSPracakem", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Run_Ticket10to40", iDUserParameter, iDTicketParameter, ukoncitSPracakemParameter, iDVykazPrace, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_TicketTextTicketu(iDVykazPrace As Nullable(Of Integer), textNaPracak As ObjectParameter) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Get_TicketTextTicketu", iDVykazPraceParameter, textNaPracak)
    End Function

    Public Overridable Function AGsp_Run_TicketXXto50(iDUser As Nullable(Of Integer), iDTicket As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim iDTicketParameter As ObjectParameter = If(iDTicket.HasValue, New ObjectParameter("IDTicket", iDTicket), New ObjectParameter("IDTicket", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Run_TicketXXto50", iDUserParameter, iDTicketParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_GetProduktJednotliveNaskladneno(produkt As String) As ObjectResult(Of AGsp_GetProduktJednotliveNaskladneno_Result)
        Dim produktParameter As ObjectParameter = If(produkt IsNot Nothing, New ObjectParameter("Produkt", produkt), New ObjectParameter("Produkt", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetProduktJednotliveNaskladneno_Result)("AGsp_GetProduktJednotliveNaskladneno", produktParameter)
    End Function

    Public Overridable Function AGsp_Do_ProduktRezervace(iDPrijemkaPol As Nullable(Of Integer), pocetEMJRezervovat As Nullable(Of Decimal), rezervovat As Nullable(Of Boolean), firma_RezervovatProFirmu As String, iDUser_Rezervoval As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDPrijemkaPolParameter As ObjectParameter = If(iDPrijemkaPol.HasValue, New ObjectParameter("IDPrijemkaPol", iDPrijemkaPol), New ObjectParameter("IDPrijemkaPol", GetType(Integer)))

        Dim pocetEMJRezervovatParameter As ObjectParameter = If(pocetEMJRezervovat.HasValue, New ObjectParameter("PocetEMJRezervovat", pocetEMJRezervovat), New ObjectParameter("PocetEMJRezervovat", GetType(Decimal)))

        Dim rezervovatParameter As ObjectParameter = If(rezervovat.HasValue, New ObjectParameter("Rezervovat", rezervovat), New ObjectParameter("Rezervovat", GetType(Boolean)))

        Dim firma_RezervovatProFirmuParameter As ObjectParameter = If(firma_RezervovatProFirmu IsNot Nothing, New ObjectParameter("Firma_RezervovatProFirmu", firma_RezervovatProFirmu), New ObjectParameter("Firma_RezervovatProFirmu", GetType(String)))

        Dim iDUser_RezervovalParameter As ObjectParameter = If(iDUser_Rezervoval.HasValue, New ObjectParameter("IDUser_Rezervoval", iDUser_Rezervoval), New ObjectParameter("IDUser_Rezervoval", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_ProduktRezervace", iDPrijemkaPolParameter, pocetEMJRezervovatParameter, rezervovatParameter, firma_RezervovatProFirmuParameter, iDUser_RezervovalParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_GetProduktRezervovaneProduktyFirmy(firma As String, produktFiltruj As String) As ObjectResult(Of AGsp_GetProduktRezervovaneProduktyFirmy_Result)
        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim produktFiltrujParameter As ObjectParameter = If(produktFiltruj IsNot Nothing, New ObjectParameter("ProduktFiltruj", produktFiltruj), New ObjectParameter("ProduktFiltruj", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetProduktRezervovaneProduktyFirmy_Result)("AGsp_GetProduktRezervovaneProduktyFirmy", firmaParameter, produktFiltrujParameter)
    End Function

    Public Overridable Function AGsp_Do_DelNaseWeby(iDWebu As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDWebuParameter As ObjectParameter = If(iDWebu.HasValue, New ObjectParameter("IDWebu", iDWebu), New ObjectParameter("IDWebu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_DelNaseWeby", iDWebuParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Do_IUNaseWeby(iDWebu As Nullable(Of Integer), nazevWebu As String, adresaWebu As String, new_IDWebu As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDWebuParameter As ObjectParameter = If(iDWebu.HasValue, New ObjectParameter("IDWebu", iDWebu), New ObjectParameter("IDWebu", GetType(Integer)))

        Dim nazevWebuParameter As ObjectParameter = If(nazevWebu IsNot Nothing, New ObjectParameter("NazevWebu", nazevWebu), New ObjectParameter("NazevWebu", GetType(String)))

        Dim adresaWebuParameter As ObjectParameter = If(adresaWebu IsNot Nothing, New ObjectParameter("AdresaWebu", adresaWebu), New ObjectParameter("AdresaWebu", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_IUNaseWeby", iDWebuParameter, nazevWebuParameter, adresaWebuParameter, new_IDWebu, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_NaseWebySeznam() As ObjectResult(Of AGsp_Get_NaseWebySeznam_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_NaseWebySeznam_Result)("AGsp_Get_NaseWebySeznam")
    End Function

    Public Overridable Function AGsp_Get_LastLapse(lL_LastLapse As Nullable(Of Integer), lastLapseText As ObjectParameter) As Integer
        Dim lL_LastLapseParameter As ObjectParameter = If(lL_LastLapse.HasValue, New ObjectParameter("LL_LastLapse", lL_LastLapse), New ObjectParameter("LL_LastLapse", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Get_LastLapse", lL_LastLapseParameter, lastLapseText)
    End Function

    Public Overridable Function AGsp_Do_IU_Doklad(iDDokladu As Nullable(Of Integer), rr_TypDokladu As Nullable(Of Byte), vSDokladu As String, firmaDodavatel As String, iDUserVytvoril As Nullable(Of Integer), new_IDDokladu As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDDokladuParameter As ObjectParameter = If(iDDokladu.HasValue, New ObjectParameter("IDDokladu", iDDokladu), New ObjectParameter("IDDokladu", GetType(Integer)))

        Dim rr_TypDokladuParameter As ObjectParameter = If(rr_TypDokladu.HasValue, New ObjectParameter("rr_TypDokladu", rr_TypDokladu), New ObjectParameter("rr_TypDokladu", GetType(Byte)))

        Dim vSDokladuParameter As ObjectParameter = If(vSDokladu IsNot Nothing, New ObjectParameter("VSDokladu", vSDokladu), New ObjectParameter("VSDokladu", GetType(String)))

        Dim firmaDodavatelParameter As ObjectParameter = If(firmaDodavatel IsNot Nothing, New ObjectParameter("FirmaDodavatel", firmaDodavatel), New ObjectParameter("FirmaDodavatel", GetType(String)))

        Dim iDUserVytvorilParameter As ObjectParameter = If(iDUserVytvoril.HasValue, New ObjectParameter("IDUserVytvoril", iDUserVytvoril), New ObjectParameter("IDUserVytvoril", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_IU_Doklad", iDDokladuParameter, rr_TypDokladuParameter, vSDokladuParameter, firmaDodavatelParameter, iDUserVytvorilParameter, new_IDDokladu, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_PrijemkaPolSeznam(iDDokladu As Nullable(Of Integer)) As ObjectResult(Of AGsp_Get_PrijemkaPolSeznam_Result1)
        Dim iDDokladuParameter As ObjectParameter = If(iDDokladu.HasValue, New ObjectParameter("IDDokladu", iDDokladu), New ObjectParameter("IDDokladu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_PrijemkaPolSeznam_Result1)("AGsp_Get_PrijemkaPolSeznam", iDDokladuParameter)
    End Function

    Public Overridable Function AGsp_Get_DokladHLSeznam() As ObjectResult(Of AGsp_Get_DokladHLSeznam_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_DokladHLSeznam_Result)("AGsp_Get_DokladHLSeznam")
    End Function

    Public Overridable Function AGsp_Do_DelPrijemkaProdukt(iDPrijemkaPol As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDPrijemkaPolParameter As ObjectParameter = If(iDPrijemkaPol.HasValue, New ObjectParameter("IDPrijemkaPol", iDPrijemkaPol), New ObjectParameter("IDPrijemkaPol", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_DelPrijemkaProdukt", iDPrijemkaPolParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Do_IPrijemkaProduktNaskladnit(iDDokladu As Nullable(Of Integer), rr_DruhNakladu As Nullable(Of Byte), produkt As String, datumPrijmu As Nullable(Of Date), naskladnenoEMJ As Nullable(Of Decimal), cenaNakup As Nullable(Of Decimal), cenaProdejni As Nullable(Of Decimal), vSPrijmovehoDokladu As String, pochaziZIDObjednavkyPol As Nullable(Of Integer), iDUserNaskladnil As Nullable(Of Integer), iDMega As Nullable(Of Long), iDPrijemkaPolNEW As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDDokladuParameter As ObjectParameter = If(iDDokladu.HasValue, New ObjectParameter("IDDokladu", iDDokladu), New ObjectParameter("IDDokladu", GetType(Integer)))

        Dim rr_DruhNakladuParameter As ObjectParameter = If(rr_DruhNakladu.HasValue, New ObjectParameter("rr_DruhNakladu", rr_DruhNakladu), New ObjectParameter("rr_DruhNakladu", GetType(Byte)))

        Dim produktParameter As ObjectParameter = If(produkt IsNot Nothing, New ObjectParameter("Produkt", produkt), New ObjectParameter("Produkt", GetType(String)))

        Dim datumPrijmuParameter As ObjectParameter = If(datumPrijmu.HasValue, New ObjectParameter("DatumPrijmu", datumPrijmu), New ObjectParameter("DatumPrijmu", GetType(Date)))

        Dim naskladnenoEMJParameter As ObjectParameter = If(naskladnenoEMJ.HasValue, New ObjectParameter("NaskladnenoEMJ", naskladnenoEMJ), New ObjectParameter("NaskladnenoEMJ", GetType(Decimal)))

        Dim cenaNakupParameter As ObjectParameter = If(cenaNakup.HasValue, New ObjectParameter("CenaNakup", cenaNakup), New ObjectParameter("CenaNakup", GetType(Decimal)))

        Dim cenaProdejniParameter As ObjectParameter = If(cenaProdejni.HasValue, New ObjectParameter("CenaProdejni", cenaProdejni), New ObjectParameter("CenaProdejni", GetType(Decimal)))

        Dim vSPrijmovehoDokladuParameter As ObjectParameter = If(vSPrijmovehoDokladu IsNot Nothing, New ObjectParameter("VSPrijmovehoDokladu", vSPrijmovehoDokladu), New ObjectParameter("VSPrijmovehoDokladu", GetType(String)))

        Dim pochaziZIDObjednavkyPolParameter As ObjectParameter = If(pochaziZIDObjednavkyPol.HasValue, New ObjectParameter("PochaziZIDObjednavkyPol", pochaziZIDObjednavkyPol), New ObjectParameter("PochaziZIDObjednavkyPol", GetType(Integer)))

        Dim iDUserNaskladnilParameter As ObjectParameter = If(iDUserNaskladnil.HasValue, New ObjectParameter("IDUserNaskladnil", iDUserNaskladnil), New ObjectParameter("IDUserNaskladnil", GetType(Integer)))

        Dim iDMegaParameter As ObjectParameter = If(iDMega.HasValue, New ObjectParameter("IDMega", iDMega), New ObjectParameter("IDMega", GetType(Long)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_IPrijemkaProduktNaskladnit", iDDokladuParameter, rr_DruhNakladuParameter, produktParameter, datumPrijmuParameter, naskladnenoEMJParameter, cenaNakupParameter, cenaProdejniParameter, vSPrijmovehoDokladuParameter, pochaziZIDObjednavkyPolParameter, iDUserNaskladnilParameter, iDMegaParameter, iDPrijemkaPolNEW, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Ge_IBPosledniDatumVypisu(iDBankovnihoUctu As Nullable(Of Integer), posledniDatum As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDBankovnihoUctuParameter As ObjectParameter = If(iDBankovnihoUctu.HasValue, New ObjectParameter("IDBankovnihoUctu", iDBankovnihoUctu), New ObjectParameter("IDBankovnihoUctu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Ge_IBPosledniDatumVypisu", iDBankovnihoUctuParameter, posledniDatum, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_DashboardUcty(iD As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As ObjectResult(Of AGsp_Get_DashboardUcty_Result)
        Dim iDParameter As ObjectParameter = If(iD.HasValue, New ObjectParameter("ID", iD), New ObjectParameter("ID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_DashboardUcty_Result)("AGsp_Get_DashboardUcty", iDParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Do_IBankaPohyb(iDPohybu As String, iDBankovnihoUctu As Nullable(Of Integer), datumPohybu As Nullable(Of Date), objem As Nullable(Of Decimal), vS As String, typ As String, lL_LastLapse As ObjectParameter) As Integer
        Dim iDPohybuParameter As ObjectParameter = If(iDPohybu IsNot Nothing, New ObjectParameter("IDPohybu", iDPohybu), New ObjectParameter("IDPohybu", GetType(String)))

        Dim iDBankovnihoUctuParameter As ObjectParameter = If(iDBankovnihoUctu.HasValue, New ObjectParameter("IDBankovnihoUctu", iDBankovnihoUctu), New ObjectParameter("IDBankovnihoUctu", GetType(Integer)))

        Dim datumPohybuParameter As ObjectParameter = If(datumPohybu.HasValue, New ObjectParameter("DatumPohybu", datumPohybu), New ObjectParameter("DatumPohybu", GetType(Date)))

        Dim objemParameter As ObjectParameter = If(objem.HasValue, New ObjectParameter("Objem", objem), New ObjectParameter("Objem", GetType(Decimal)))

        Dim vSParameter As ObjectParameter = If(vS IsNot Nothing, New ObjectParameter("VS", vS), New ObjectParameter("VS", GetType(String)))

        Dim typParameter As ObjectParameter = If(typ IsNot Nothing, New ObjectParameter("Typ", typ), New ObjectParameter("Typ", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_IBankaPohyb", iDPohybuParameter, iDBankovnihoUctuParameter, datumPohybuParameter, objemParameter, vSParameter, typParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Do_UDoctorumBackupProfile(iDBackupProfile As Nullable(Of Integer), firma As String, popisZarizeni As String, serverovaSlozka As String, poznamka As String, doKdyZaplaceno As Nullable(Of Date), posledniFaktura As String, rr_AmbulSW As Nullable(Of Short), rr_StavBackupProfile As Nullable(Of Byte), kdoToJe As String, telefon As String, email As String, fakturovatNaICO As String, sBvRezimuServer As Nullable(Of Boolean), smluvniCenaMaintenance As Nullable(Of Decimal), rr_UcetniStavSB As Nullable(Of Short), lL_LastLapse As ObjectParameter) As Integer
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Dim firmaParameter As ObjectParameter = If(firma IsNot Nothing, New ObjectParameter("Firma", firma), New ObjectParameter("Firma", GetType(String)))

        Dim popisZarizeniParameter As ObjectParameter = If(popisZarizeni IsNot Nothing, New ObjectParameter("PopisZarizeni", popisZarizeni), New ObjectParameter("PopisZarizeni", GetType(String)))

        Dim serverovaSlozkaParameter As ObjectParameter = If(serverovaSlozka IsNot Nothing, New ObjectParameter("ServerovaSlozka", serverovaSlozka), New ObjectParameter("ServerovaSlozka", GetType(String)))

        Dim poznamkaParameter As ObjectParameter = If(poznamka IsNot Nothing, New ObjectParameter("Poznamka", poznamka), New ObjectParameter("Poznamka", GetType(String)))

        Dim doKdyZaplacenoParameter As ObjectParameter = If(doKdyZaplaceno.HasValue, New ObjectParameter("DoKdyZaplaceno", doKdyZaplaceno), New ObjectParameter("DoKdyZaplaceno", GetType(Date)))

        Dim posledniFakturaParameter As ObjectParameter = If(posledniFaktura IsNot Nothing, New ObjectParameter("PosledniFaktura", posledniFaktura), New ObjectParameter("PosledniFaktura", GetType(String)))

        Dim rr_AmbulSWParameter As ObjectParameter = If(rr_AmbulSW.HasValue, New ObjectParameter("rr_AmbulSW", rr_AmbulSW), New ObjectParameter("rr_AmbulSW", GetType(Short)))

        Dim rr_StavBackupProfileParameter As ObjectParameter = If(rr_StavBackupProfile.HasValue, New ObjectParameter("rr_StavBackupProfile", rr_StavBackupProfile), New ObjectParameter("rr_StavBackupProfile", GetType(Byte)))

        Dim kdoToJeParameter As ObjectParameter = If(kdoToJe IsNot Nothing, New ObjectParameter("KdoToJe", kdoToJe), New ObjectParameter("KdoToJe", GetType(String)))

        Dim telefonParameter As ObjectParameter = If(telefon IsNot Nothing, New ObjectParameter("Telefon", telefon), New ObjectParameter("Telefon", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("Email", email), New ObjectParameter("Email", GetType(String)))

        Dim fakturovatNaICOParameter As ObjectParameter = If(fakturovatNaICO IsNot Nothing, New ObjectParameter("FakturovatNaICO", fakturovatNaICO), New ObjectParameter("FakturovatNaICO", GetType(String)))

        Dim sBvRezimuServerParameter As ObjectParameter = If(sBvRezimuServer.HasValue, New ObjectParameter("SBvRezimuServer", sBvRezimuServer), New ObjectParameter("SBvRezimuServer", GetType(Boolean)))

        Dim smluvniCenaMaintenanceParameter As ObjectParameter = If(smluvniCenaMaintenance.HasValue, New ObjectParameter("SmluvniCenaMaintenance", smluvniCenaMaintenance), New ObjectParameter("SmluvniCenaMaintenance", GetType(Decimal)))

        Dim rr_UcetniStavSBParameter As ObjectParameter = If(rr_UcetniStavSB.HasValue, New ObjectParameter("rr_UcetniStavSB", rr_UcetniStavSB), New ObjectParameter("rr_UcetniStavSB", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_UDoctorumBackupProfile", iDBackupProfileParameter, firmaParameter, popisZarizeniParameter, serverovaSlozkaParameter, poznamkaParameter, doKdyZaplacenoParameter, posledniFakturaParameter, rr_AmbulSWParameter, rr_StavBackupProfileParameter, kdoToJeParameter, telefonParameter, emailParameter, fakturovatNaICOParameter, sBvRezimuServerParameter, smluvniCenaMaintenanceParameter, rr_UcetniStavSBParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_BackupZalohyJednohoProfilu(iDBackupProfile As Nullable(Of Integer)) As ObjectResult(Of AGsp_Get_BackupZalohyJednohoProfilu_Result)
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_BackupZalohyJednohoProfilu_Result)("AGsp_Get_BackupZalohyJednohoProfilu", iDBackupProfileParameter)
    End Function

    Public Overridable Function AGsp_Get_DoctorumBackupConfig(iDProcesoru As String, userName As String, verzeSluzby As String, iDBackupProfile As ObjectParameter, rr_StavBackupProfile As ObjectParameter, rr_StavBackupProfileText As ObjectParameter, datumExpirace As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDProcesoruParameter As ObjectParameter = If(iDProcesoru IsNot Nothing, New ObjectParameter("IDProcesoru", iDProcesoru), New ObjectParameter("IDProcesoru", GetType(String)))

        Dim userNameParameter As ObjectParameter = If(userName IsNot Nothing, New ObjectParameter("UserName", userName), New ObjectParameter("UserName", GetType(String)))

        Dim verzeSluzbyParameter As ObjectParameter = If(verzeSluzby IsNot Nothing, New ObjectParameter("VerzeSluzby", verzeSluzby), New ObjectParameter("VerzeSluzby", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Get_DoctorumBackupConfig", iDProcesoruParameter, userNameParameter, verzeSluzbyParameter, iDBackupProfile, rr_StavBackupProfile, rr_StavBackupProfileText, datumExpirace, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Do_INovyBackup(iDBackupProfile As Nullable(Of Integer), backupFileName As String, rr_BackupUspesnost As Nullable(Of Byte), metadataXML As String, lL_LastLapse As ObjectParameter) As Integer
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Dim backupFileNameParameter As ObjectParameter = If(backupFileName IsNot Nothing, New ObjectParameter("BackupFileName", backupFileName), New ObjectParameter("BackupFileName", GetType(String)))

        Dim rr_BackupUspesnostParameter As ObjectParameter = If(rr_BackupUspesnost.HasValue, New ObjectParameter("rr_BackupUspesnost", rr_BackupUspesnost), New ObjectParameter("rr_BackupUspesnost", GetType(Byte)))

        Dim metadataXMLParameter As ObjectParameter = If(metadataXML IsNot Nothing, New ObjectParameter("MetadataXML", metadataXML), New ObjectParameter("MetadataXML", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_INovyBackup", iDBackupProfileParameter, backupFileNameParameter, rr_BackupUspesnostParameter, metadataXMLParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_BackupServerovaSlozka(iDProcesoru As String) As ObjectResult(Of AGsp_Get_BackupServerovaSlozka_Result)
        Dim iDProcesoruParameter As ObjectParameter = If(iDProcesoru IsNot Nothing, New ObjectParameter("IDProcesoru", iDProcesoru), New ObjectParameter("IDProcesoru", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_BackupServerovaSlozka_Result)("AGsp_Get_BackupServerovaSlozka", iDProcesoruParameter)
    End Function

    Public Overridable Function AGsp_Get_BackupProfileSeznam() As ObjectResult(Of AGsp_Get_BackupProfileSeznam_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_BackupProfileSeznam_Result)("AGsp_Get_BackupProfileSeznam")
    End Function

    Public Overridable Function AGsp_Get_BackupXMLConfig(iDBackupProfile As Nullable(Of Integer), xMLConfig As ObjectParameter) As Integer
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Get_BackupXMLConfig", iDBackupProfileParameter, xMLConfig)
    End Function

    Public Overridable Function AGsp_Do_UBackupStav(iDBackup As Nullable(Of Integer), rr_BackupUspesnost As Nullable(Of Byte), lL_LastLapse As ObjectParameter) As Integer
        Dim iDBackupParameter As ObjectParameter = If(iDBackup.HasValue, New ObjectParameter("IDBackup", iDBackup), New ObjectParameter("IDBackup", GetType(Integer)))

        Dim rr_BackupUspesnostParameter As ObjectParameter = If(rr_BackupUspesnost.HasValue, New ObjectParameter("rr_BackupUspesnost", rr_BackupUspesnost), New ObjectParameter("rr_BackupUspesnost", GetType(Byte)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_UBackupStav", iDBackupParameter, rr_BackupUspesnostParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_DashboardPohledavkyPodrobne(zobrazitJenPoSplatnosti As Nullable(Of Boolean)) As ObjectResult(Of AGsp_Get_DashboardPohledavkyPodrobne_Result1)
        Dim zobrazitJenPoSplatnostiParameter As ObjectParameter = If(zobrazitJenPoSplatnosti.HasValue, New ObjectParameter("ZobrazitJenPoSplatnosti", zobrazitJenPoSplatnosti), New ObjectParameter("ZobrazitJenPoSplatnosti", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_DashboardPohledavkyPodrobne_Result1)("AGsp_Get_DashboardPohledavkyPodrobne", zobrazitJenPoSplatnostiParameter)
    End Function

    Public Overridable Function AGsp_GetFA_SloucitNaJednuFakturu(iDVykazPrace As Nullable(Of Integer)) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_GetFA_SloucitNaJednuFakturu", iDVykazPraceParameter)
    End Function

    Public Overridable Function AGsp_Get_DoctorumBackupProfile() As ObjectResult(Of AGsp_Get_DoctorumBackupProfile_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_DoctorumBackupProfile_Result)("AGsp_Get_DoctorumBackupProfile")
    End Function

    Public Overridable Function AGsp_Do_AddError(errorProcedure As String, errorLine As Nullable(Of Integer), errorMessage As String) As Integer
        Dim errorProcedureParameter As ObjectParameter = If(errorProcedure IsNot Nothing, New ObjectParameter("ErrorProcedure", errorProcedure), New ObjectParameter("ErrorProcedure", GetType(String)))

        Dim errorLineParameter As ObjectParameter = If(errorLine.HasValue, New ObjectParameter("ErrorLine", errorLine), New ObjectParameter("ErrorLine", GetType(Integer)))

        Dim errorMessageParameter As ObjectParameter = If(errorMessage IsNot Nothing, New ObjectParameter("ErrorMessage", errorMessage), New ObjectParameter("ErrorMessage", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_AddError", errorProcedureParameter, errorLineParameter, errorMessageParameter)
    End Function

    Public Overridable Function AGsp_Do_ISafeBerryDownload(iPAddress As String, country As String, city As String) As Integer
        Dim iPAddressParameter As ObjectParameter = If(iPAddress IsNot Nothing, New ObjectParameter("IPAddress", iPAddress), New ObjectParameter("IPAddress", GetType(String)))

        Dim countryParameter As ObjectParameter = If(country IsNot Nothing, New ObjectParameter("Country", country), New ObjectParameter("Country", GetType(String)))

        Dim cityParameter As ObjectParameter = If(city IsNot Nothing, New ObjectParameter("City", city), New ObjectParameter("City", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_ISafeBerryDownload", iPAddressParameter, countryParameter, cityParameter)
    End Function

    Public Overridable Function AGsp_Do_ISafeBerryZpravaOdKlienta(libi As Nullable(Of Boolean), vadi As Nullable(Of Boolean), zprava As String, emailNaOdpoved As String, newID As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim libiParameter As ObjectParameter = If(libi.HasValue, New ObjectParameter("Libi", libi), New ObjectParameter("Libi", GetType(Boolean)))

        Dim vadiParameter As ObjectParameter = If(vadi.HasValue, New ObjectParameter("Vadi", vadi), New ObjectParameter("Vadi", GetType(Boolean)))

        Dim zpravaParameter As ObjectParameter = If(zprava IsNot Nothing, New ObjectParameter("Zprava", zprava), New ObjectParameter("Zprava", GetType(String)))

        Dim emailNaOdpovedParameter As ObjectParameter = If(emailNaOdpoved IsNot Nothing, New ObjectParameter("EmailNaOdpoved", emailNaOdpoved), New ObjectParameter("EmailNaOdpoved", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_ISafeBerryZpravaOdKlienta", libiParameter, vadiParameter, zpravaParameter, emailNaOdpovedParameter, newID, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Do_UBackupTimeConfig(iDBackupProfile As Nullable(Of Integer), updatovat As Nullable(Of Boolean), backupTimeConfig As String, backupTimeConfigOUT As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Dim updatovatParameter As ObjectParameter = If(updatovat.HasValue, New ObjectParameter("Updatovat", updatovat), New ObjectParameter("Updatovat", GetType(Boolean)))

        Dim backupTimeConfigParameter As ObjectParameter = If(backupTimeConfig IsNot Nothing, New ObjectParameter("BackupTimeConfig", backupTimeConfig), New ObjectParameter("BackupTimeConfig", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_UBackupTimeConfig", iDBackupProfileParameter, updatovatParameter, backupTimeConfigParameter, backupTimeConfigOUT, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_DoctorumBackupConfig_G2(iDBackupProfile As Nullable(Of Integer), appID As Nullable(Of System.Guid), iDProcesoru As String, iDMACAdresa As String, userName As String, verzeSluzby As String, iDKlienta As ObjectParameter, iDBackupProfileOUT As ObjectParameter, rr_StavBackupProfile As ObjectParameter, rr_StavBackupProfileText As ObjectParameter, datumExpirace As ObjectParameter, backupTimeConfig As ObjectParameter, appID_OUT As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Dim appIDParameter As ObjectParameter = If(appID.HasValue, New ObjectParameter("AppID", appID), New ObjectParameter("AppID", GetType(System.Guid)))

        Dim iDProcesoruParameter As ObjectParameter = If(iDProcesoru IsNot Nothing, New ObjectParameter("IDProcesoru", iDProcesoru), New ObjectParameter("IDProcesoru", GetType(String)))

        Dim iDMACAdresaParameter As ObjectParameter = If(iDMACAdresa IsNot Nothing, New ObjectParameter("IDMACAdresa", iDMACAdresa), New ObjectParameter("IDMACAdresa", GetType(String)))

        Dim userNameParameter As ObjectParameter = If(userName IsNot Nothing, New ObjectParameter("UserName", userName), New ObjectParameter("UserName", GetType(String)))

        Dim verzeSluzbyParameter As ObjectParameter = If(verzeSluzby IsNot Nothing, New ObjectParameter("VerzeSluzby", verzeSluzby), New ObjectParameter("VerzeSluzby", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Get_DoctorumBackupConfig_G2", iDBackupProfileParameter, appIDParameter, iDProcesoruParameter, iDMACAdresaParameter, userNameParameter, verzeSluzbyParameter, iDKlienta, iDBackupProfileOUT, rr_StavBackupProfile, rr_StavBackupProfileText, datumExpirace, backupTimeConfig, appID_OUT, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_BackupServerovaSlozka_G2(appID As Nullable(Of System.Guid)) As ObjectResult(Of AGsp_Get_BackupServerovaSlozka_G2_Result)
        Dim appIDParameter As ObjectParameter = If(appID.HasValue, New ObjectParameter("AppID", appID), New ObjectParameter("AppID", GetType(System.Guid)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_BackupServerovaSlozka_G2_Result)("AGsp_Get_BackupServerovaSlozka_G2", appIDParameter)
    End Function

    Public Overridable Function AGsp_Get_DoctorumBackupProfile_G2(rr_BackupFilterProfile As Nullable(Of Short), hledej As String) As ObjectResult(Of AGsp_Get_DoctorumBackupProfile_G2_Result)
        Dim rr_BackupFilterProfileParameter As ObjectParameter = If(rr_BackupFilterProfile.HasValue, New ObjectParameter("rr_BackupFilterProfile", rr_BackupFilterProfile), New ObjectParameter("rr_BackupFilterProfile", GetType(Short)))

        Dim hledejParameter As ObjectParameter = If(hledej IsNot Nothing, New ObjectParameter("Hledej", hledej), New ObjectParameter("Hledej", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_DoctorumBackupProfile_G2_Result)("AGsp_Get_DoctorumBackupProfile_G2", rr_BackupFilterProfileParameter, hledejParameter)
    End Function

    Public Overridable Function AGsp_GetSBGrafDostupnosti(iDBackupProfile As Nullable(Of Integer)) As ObjectResult(Of AGsp_GetSBGrafDostupnosti_Result)
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_GetSBGrafDostupnosti_Result)("AGsp_GetSBGrafDostupnosti", iDBackupProfileParameter)
    End Function

    Public Overridable Function AGsp_Do_INovyBackup_G2(iDBackupProfile As Nullable(Of Integer), backupFileName As String, rr_BackupUspesnost As Nullable(Of Byte), velikostZalohy As Nullable(Of Long), metadataXML As String, lL_LastLapse As ObjectParameter) As Integer
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Dim backupFileNameParameter As ObjectParameter = If(backupFileName IsNot Nothing, New ObjectParameter("BackupFileName", backupFileName), New ObjectParameter("BackupFileName", GetType(String)))

        Dim rr_BackupUspesnostParameter As ObjectParameter = If(rr_BackupUspesnost.HasValue, New ObjectParameter("rr_BackupUspesnost", rr_BackupUspesnost), New ObjectParameter("rr_BackupUspesnost", GetType(Byte)))

        Dim velikostZalohyParameter As ObjectParameter = If(velikostZalohy.HasValue, New ObjectParameter("VelikostZalohy", velikostZalohy), New ObjectParameter("VelikostZalohy", GetType(Long)))

        Dim metadataXMLParameter As ObjectParameter = If(metadataXML IsNot Nothing, New ObjectParameter("MetadataXML", metadataXML), New ObjectParameter("MetadataXML", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_INovyBackup_G2", iDBackupProfileParameter, backupFileNameParameter, rr_BackupUspesnostParameter, velikostZalohyParameter, metadataXMLParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_BackupZalohyJednohoProfilu_G2(iDBackupProfile As Nullable(Of Integer)) As ObjectResult(Of AGsp_Get_BackupZalohyJednohoProfilu_G2_Result)
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_BackupZalohyJednohoProfilu_G2_Result)("AGsp_Get_BackupZalohyJednohoProfilu_G2", iDBackupProfileParameter)
    End Function

    Public Overridable Function AGsp_Do_UDoctorumBackupAktualniBalicek(iDBackupProfile As Nullable(Of Integer), popisekAktualnihoBalicku As String, lL_LastLapse As ObjectParameter) As Integer
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Dim popisekAktualnihoBalickuParameter As ObjectParameter = If(popisekAktualnihoBalicku IsNot Nothing, New ObjectParameter("PopisekAktualnihoBalicku", popisekAktualnihoBalicku), New ObjectParameter("PopisekAktualnihoBalicku", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_UDoctorumBackupAktualniBalicek", iDBackupProfileParameter, popisekAktualnihoBalickuParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Do_UBackupRegistracePotvrzeni(iDBackupProfile As Nullable(Of Integer), aktivacniKod As String, lL_LastLapse As ObjectParameter) As Integer
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Dim aktivacniKodParameter As ObjectParameter = If(aktivacniKod IsNot Nothing, New ObjectParameter("AktivacniKod", aktivacniKod), New ObjectParameter("AktivacniKod", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_UBackupRegistracePotvrzeni", iDBackupProfileParameter, aktivacniKodParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Do_UBackupRegistracniUdaje(iDBackupProfile As Nullable(Of Integer), kdoToJe As String, telefon As String, email As String, aktivacniKod As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Dim kdoToJeParameter As ObjectParameter = If(kdoToJe IsNot Nothing, New ObjectParameter("KdoToJe", kdoToJe), New ObjectParameter("KdoToJe", GetType(String)))

        Dim telefonParameter As ObjectParameter = If(telefon IsNot Nothing, New ObjectParameter("Telefon", telefon), New ObjectParameter("Telefon", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("Email", email), New ObjectParameter("Email", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_UBackupRegistracniUdaje", iDBackupProfileParameter, kdoToJeParameter, telefonParameter, emailParameter, aktivacniKod, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_DoctorumBackupConfig_G3(iDBackupProfile As Nullable(Of Integer), appID As Nullable(Of System.Guid), iDProcesoru As String, iDMACAdresa As String, userName As String, verzeSluzby As String, iDKlienta As ObjectParameter, iDBackupProfileOUT As ObjectParameter, rr_StavBackupProfile As ObjectParameter, rr_StavBackupProfileText As ObjectParameter, datumExpirace As ObjectParameter, backupTimeConfig As ObjectParameter, appID_OUT As ObjectParameter, nahoditSignalR As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Dim appIDParameter As ObjectParameter = If(appID.HasValue, New ObjectParameter("AppID", appID), New ObjectParameter("AppID", GetType(System.Guid)))

        Dim iDProcesoruParameter As ObjectParameter = If(iDProcesoru IsNot Nothing, New ObjectParameter("IDProcesoru", iDProcesoru), New ObjectParameter("IDProcesoru", GetType(String)))

        Dim iDMACAdresaParameter As ObjectParameter = If(iDMACAdresa IsNot Nothing, New ObjectParameter("IDMACAdresa", iDMACAdresa), New ObjectParameter("IDMACAdresa", GetType(String)))

        Dim userNameParameter As ObjectParameter = If(userName IsNot Nothing, New ObjectParameter("UserName", userName), New ObjectParameter("UserName", GetType(String)))

        Dim verzeSluzbyParameter As ObjectParameter = If(verzeSluzby IsNot Nothing, New ObjectParameter("VerzeSluzby", verzeSluzby), New ObjectParameter("VerzeSluzby", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Get_DoctorumBackupConfig_G3", iDBackupProfileParameter, appIDParameter, iDProcesoruParameter, iDMACAdresaParameter, userNameParameter, verzeSluzbyParameter, iDKlienta, iDBackupProfileOUT, rr_StavBackupProfile, rr_StavBackupProfileText, datumExpirace, backupTimeConfig, appID_OUT, nahoditSignalR, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Do_NahoditSignalR(iDBackupProfile As Nullable(Of Integer), nahoditSignalR As Nullable(Of Short), lL_LastLapse As ObjectParameter) As Integer
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Dim nahoditSignalRParameter As ObjectParameter = If(nahoditSignalR.HasValue, New ObjectParameter("NahoditSignalR", nahoditSignalR), New ObjectParameter("NahoditSignalR", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_NahoditSignalR", iDBackupProfileParameter, nahoditSignalRParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Do_UBackupRegistracniUdaje_G2(iDBackupProfile As Nullable(Of Integer), kdoToJe As String, telefon As String, email As String, fakturovatNaICO As String, faktDIC As String, faktJmenoNazevFirmy As String, faktUlice As String, faktPSC As String, faktMesto As String, aktivacniKod As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Dim kdoToJeParameter As ObjectParameter = If(kdoToJe IsNot Nothing, New ObjectParameter("KdoToJe", kdoToJe), New ObjectParameter("KdoToJe", GetType(String)))

        Dim telefonParameter As ObjectParameter = If(telefon IsNot Nothing, New ObjectParameter("Telefon", telefon), New ObjectParameter("Telefon", GetType(String)))

        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("Email", email), New ObjectParameter("Email", GetType(String)))

        Dim fakturovatNaICOParameter As ObjectParameter = If(fakturovatNaICO IsNot Nothing, New ObjectParameter("FakturovatNaICO", fakturovatNaICO), New ObjectParameter("FakturovatNaICO", GetType(String)))

        Dim faktDICParameter As ObjectParameter = If(faktDIC IsNot Nothing, New ObjectParameter("FaktDIC", faktDIC), New ObjectParameter("FaktDIC", GetType(String)))

        Dim faktJmenoNazevFirmyParameter As ObjectParameter = If(faktJmenoNazevFirmy IsNot Nothing, New ObjectParameter("FaktJmenoNazevFirmy", faktJmenoNazevFirmy), New ObjectParameter("FaktJmenoNazevFirmy", GetType(String)))

        Dim faktUliceParameter As ObjectParameter = If(faktUlice IsNot Nothing, New ObjectParameter("FaktUlice", faktUlice), New ObjectParameter("FaktUlice", GetType(String)))

        Dim faktPSCParameter As ObjectParameter = If(faktPSC IsNot Nothing, New ObjectParameter("FaktPSC", faktPSC), New ObjectParameter("FaktPSC", GetType(String)))

        Dim faktMestoParameter As ObjectParameter = If(faktMesto IsNot Nothing, New ObjectParameter("FaktMesto", faktMesto), New ObjectParameter("FaktMesto", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_UBackupRegistracniUdaje_G2", iDBackupProfileParameter, kdoToJeParameter, telefonParameter, emailParameter, fakturovatNaICOParameter, faktDICParameter, faktJmenoNazevFirmyParameter, faktUliceParameter, faktPSCParameter, faktMestoParameter, aktivacniKod, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_DoctorumBackupConfig_G4(iDBackupProfile As Nullable(Of Integer), appID As Nullable(Of System.Guid), iDProcesoru As String, iDMACAdresa As String, userName As String, verzeSluzby As String, iDKlienta As ObjectParameter, iDBackupProfileOUT As ObjectParameter, rr_StavBackupProfile As ObjectParameter, rr_StavBackupProfileText As ObjectParameter, datumExpirace As ObjectParameter, backupTimeConfig As ObjectParameter, appID_OUT As ObjectParameter, nahoditSignalR As ObjectParameter, sBvRezimuServer As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Dim appIDParameter As ObjectParameter = If(appID.HasValue, New ObjectParameter("AppID", appID), New ObjectParameter("AppID", GetType(System.Guid)))

        Dim iDProcesoruParameter As ObjectParameter = If(iDProcesoru IsNot Nothing, New ObjectParameter("IDProcesoru", iDProcesoru), New ObjectParameter("IDProcesoru", GetType(String)))

        Dim iDMACAdresaParameter As ObjectParameter = If(iDMACAdresa IsNot Nothing, New ObjectParameter("IDMACAdresa", iDMACAdresa), New ObjectParameter("IDMACAdresa", GetType(String)))

        Dim userNameParameter As ObjectParameter = If(userName IsNot Nothing, New ObjectParameter("UserName", userName), New ObjectParameter("UserName", GetType(String)))

        Dim verzeSluzbyParameter As ObjectParameter = If(verzeSluzby IsNot Nothing, New ObjectParameter("VerzeSluzby", verzeSluzby), New ObjectParameter("VerzeSluzby", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Get_DoctorumBackupConfig_G4", iDBackupProfileParameter, appIDParameter, iDProcesoruParameter, iDMACAdresaParameter, userNameParameter, verzeSluzbyParameter, iDKlienta, iDBackupProfileOUT, rr_StavBackupProfile, rr_StavBackupProfileText, datumExpirace, backupTimeConfig, appID_OUT, nahoditSignalR, sBvRezimuServer, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_VyuctovaniNazvyComboBox(lL_LastLapse As ObjectParameter) As ObjectResult(Of String)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("AGsp_Get_VyuctovaniNazvyComboBox", lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_VyuctovaniSeznam(iDUserFiltr As Nullable(Of Integer), vyuctovaniNazev As String, rr_StavVyuctovani As Nullable(Of Short), iDUserPrihlaseny As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As ObjectResult(Of AGsp_Get_VyuctovaniSeznam_Result)
        Dim iDUserFiltrParameter As ObjectParameter = If(iDUserFiltr.HasValue, New ObjectParameter("IDUserFiltr", iDUserFiltr), New ObjectParameter("IDUserFiltr", GetType(Integer)))

        Dim vyuctovaniNazevParameter As ObjectParameter = If(vyuctovaniNazev IsNot Nothing, New ObjectParameter("VyuctovaniNazev", vyuctovaniNazev), New ObjectParameter("VyuctovaniNazev", GetType(String)))

        Dim rr_StavVyuctovaniParameter As ObjectParameter = If(rr_StavVyuctovani.HasValue, New ObjectParameter("rr_StavVyuctovani", rr_StavVyuctovani), New ObjectParameter("rr_StavVyuctovani", GetType(Short)))

        Dim iDUserPrihlasenyParameter As ObjectParameter = If(iDUserPrihlaseny.HasValue, New ObjectParameter("IDUserPrihlaseny", iDUserPrihlaseny), New ObjectParameter("IDUserPrihlaseny", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_VyuctovaniSeznam_Result)("AGsp_Get_VyuctovaniSeznam", iDUserFiltrParameter, vyuctovaniNazevParameter, rr_StavVyuctovaniParameter, iDUserPrihlasenyParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_VyuctovaniTechnikaPol(iDUserFiltr As Nullable(Of Integer), vyuctovaniNazev As String, rr_StavVyuctovani As Nullable(Of Short), iDUserPrihlaseny As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As ObjectResult(Of AGsp_Get_VyuctovaniTechnikaPol_Result)
        Dim iDUserFiltrParameter As ObjectParameter = If(iDUserFiltr.HasValue, New ObjectParameter("IDUserFiltr", iDUserFiltr), New ObjectParameter("IDUserFiltr", GetType(Integer)))

        Dim vyuctovaniNazevParameter As ObjectParameter = If(vyuctovaniNazev IsNot Nothing, New ObjectParameter("VyuctovaniNazev", vyuctovaniNazev), New ObjectParameter("VyuctovaniNazev", GetType(String)))

        Dim rr_StavVyuctovaniParameter As ObjectParameter = If(rr_StavVyuctovani.HasValue, New ObjectParameter("rr_StavVyuctovani", rr_StavVyuctovani), New ObjectParameter("rr_StavVyuctovani", GetType(Short)))

        Dim iDUserPrihlasenyParameter As ObjectParameter = If(iDUserPrihlaseny.HasValue, New ObjectParameter("IDUserPrihlaseny", iDUserPrihlaseny), New ObjectParameter("IDUserPrihlaseny", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_VyuctovaniTechnikaPol_Result)("AGsp_Get_VyuctovaniTechnikaPol", iDUserFiltrParameter, vyuctovaniNazevParameter, rr_StavVyuctovaniParameter, iDUserPrihlasenyParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_VykazPraceSeznamJizdVMesici(iDVykazPrace As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As ObjectResult(Of AGsp_Get_VykazPraceSeznamJizdVMesici_Result)
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_VykazPraceSeznamJizdVMesici_Result)("AGsp_Get_VykazPraceSeznamJizdVMesici", iDVykazPraceParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_VykazPraceCerpaneHodinyVMesici(iDVykazPrace As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As ObjectResult(Of AGsp_Get_VykazPraceCerpaneHodinyVMesici_Result)
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_VykazPraceCerpaneHodinyVMesici_Result)("AGsp_Get_VykazPraceCerpaneHodinyVMesici", iDVykazPraceParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_VykazPraceCerpaneHodinyVMesiciSumy(iDVykazPrace As Nullable(Of Integer), iDVykazPracePol_VyloucitZeSumy As Nullable(Of Integer), sumaHodin As ObjectParameter, sumaCerpano As ObjectParameter, nazevServisky As ObjectParameter, volnychHodinNaSmlouve As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Dim iDVykazPracePol_VyloucitZeSumyParameter As ObjectParameter = If(iDVykazPracePol_VyloucitZeSumy.HasValue, New ObjectParameter("IDVykazPracePol_VyloucitZeSumy", iDVykazPracePol_VyloucitZeSumy), New ObjectParameter("IDVykazPracePol_VyloucitZeSumy", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Get_VykazPraceCerpaneHodinyVMesiciSumy", iDVykazPraceParameter, iDVykazPracePol_VyloucitZeSumyParameter, sumaHodin, sumaCerpano, nazevServisky, volnychHodinNaSmlouve, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Get_MesicniReport(iDBackupProfile As Nullable(Of Integer), keDni As Nullable(Of Date), lL_LastLapse As ObjectParameter) As ObjectResult(Of AGsp_Get_MesicniReport_Result)
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Dim keDniParameter As ObjectParameter = If(keDni.HasValue, New ObjectParameter("KeDni", keDni), New ObjectParameter("KeDni", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_MesicniReport_Result)("AGsp_Get_MesicniReport", iDBackupProfileParameter, keDniParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Do_SpocitejProviziTechnika_G2(iDVykazPracePol As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDVykazPracePolParameter As ObjectParameter = If(iDVykazPracePol.HasValue, New ObjectParameter("IDVykazPracePol", iDVykazPracePol), New ObjectParameter("IDVykazPracePol", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_SpocitejProviziTechnika_G2", iDVykazPracePolParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Do_DelFirma(iDFirmy As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDFirmyParameter As ObjectParameter = If(iDFirmy.HasValue, New ObjectParameter("IDFirmy", iDFirmy), New ObjectParameter("IDFirmy", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_DelFirma", iDFirmyParameter, lL_LastLapse)
    End Function

    Public Overridable Function AGsp_Do_IUFirma(iDFirmy As Nullable(Of Integer), iDKnihy As Nullable(Of Integer), firmaNazev As String, ulice As String, pSC As String, mesto As String, iCO As String, dIC As String, emailProObjednavky As String, emailProFakturaci As String, uzNepouzivat As Nullable(Of Boolean), odberatel As Nullable(Of Boolean), dodavatel As Nullable(Of Boolean), kategorie As String, pozn As String, iDUserUpravil As Nullable(Of Integer), casVytvoril As Nullable(Of Date), casUpravil As Nullable(Of Date), zapisOR As String, iCP As String, iCPOsoba As String, iCPAdresa As String, iCPNazev1 As String, iCPNazev2 As String, iCPOdbornost As String, jednatel As String, kontaktTelefon As String, lL_LastLapse As ObjectParameter, newIDFirmy As ObjectParameter) As Integer
        Dim iDFirmyParameter As ObjectParameter = If(iDFirmy.HasValue, New ObjectParameter("IDFirmy", iDFirmy), New ObjectParameter("IDFirmy", GetType(Integer)))

        Dim iDKnihyParameter As ObjectParameter = If(iDKnihy.HasValue, New ObjectParameter("IDKnihy", iDKnihy), New ObjectParameter("IDKnihy", GetType(Integer)))

        Dim firmaNazevParameter As ObjectParameter = If(firmaNazev IsNot Nothing, New ObjectParameter("FirmaNazev", firmaNazev), New ObjectParameter("FirmaNazev", GetType(String)))

        Dim uliceParameter As ObjectParameter = If(ulice IsNot Nothing, New ObjectParameter("Ulice", ulice), New ObjectParameter("Ulice", GetType(String)))

        Dim pSCParameter As ObjectParameter = If(pSC IsNot Nothing, New ObjectParameter("PSC", pSC), New ObjectParameter("PSC", GetType(String)))

        Dim mestoParameter As ObjectParameter = If(mesto IsNot Nothing, New ObjectParameter("Mesto", mesto), New ObjectParameter("Mesto", GetType(String)))

        Dim iCOParameter As ObjectParameter = If(iCO IsNot Nothing, New ObjectParameter("ICO", iCO), New ObjectParameter("ICO", GetType(String)))

        Dim dICParameter As ObjectParameter = If(dIC IsNot Nothing, New ObjectParameter("DIC", dIC), New ObjectParameter("DIC", GetType(String)))

        Dim emailProObjednavkyParameter As ObjectParameter = If(emailProObjednavky IsNot Nothing, New ObjectParameter("EmailProObjednavky", emailProObjednavky), New ObjectParameter("EmailProObjednavky", GetType(String)))

        Dim emailProFakturaciParameter As ObjectParameter = If(emailProFakturaci IsNot Nothing, New ObjectParameter("EmailProFakturaci", emailProFakturaci), New ObjectParameter("EmailProFakturaci", GetType(String)))

        Dim uzNepouzivatParameter As ObjectParameter = If(uzNepouzivat.HasValue, New ObjectParameter("UzNepouzivat", uzNepouzivat), New ObjectParameter("UzNepouzivat", GetType(Boolean)))

        Dim odberatelParameter As ObjectParameter = If(odberatel.HasValue, New ObjectParameter("Odberatel", odberatel), New ObjectParameter("Odberatel", GetType(Boolean)))

        Dim dodavatelParameter As ObjectParameter = If(dodavatel.HasValue, New ObjectParameter("Dodavatel", dodavatel), New ObjectParameter("Dodavatel", GetType(Boolean)))

        Dim kategorieParameter As ObjectParameter = If(kategorie IsNot Nothing, New ObjectParameter("Kategorie", kategorie), New ObjectParameter("Kategorie", GetType(String)))

        Dim poznParameter As ObjectParameter = If(pozn IsNot Nothing, New ObjectParameter("Pozn", pozn), New ObjectParameter("Pozn", GetType(String)))

        Dim iDUserUpravilParameter As ObjectParameter = If(iDUserUpravil.HasValue, New ObjectParameter("IDUserUpravil", iDUserUpravil), New ObjectParameter("IDUserUpravil", GetType(Integer)))

        Dim casVytvorilParameter As ObjectParameter = If(casVytvoril.HasValue, New ObjectParameter("CasVytvoril", casVytvoril), New ObjectParameter("CasVytvoril", GetType(Date)))

        Dim casUpravilParameter As ObjectParameter = If(casUpravil.HasValue, New ObjectParameter("CasUpravil", casUpravil), New ObjectParameter("CasUpravil", GetType(Date)))

        Dim zapisORParameter As ObjectParameter = If(zapisOR IsNot Nothing, New ObjectParameter("ZapisOR", zapisOR), New ObjectParameter("ZapisOR", GetType(String)))

        Dim iCPParameter As ObjectParameter = If(iCP IsNot Nothing, New ObjectParameter("ICP", iCP), New ObjectParameter("ICP", GetType(String)))

        Dim iCPOsobaParameter As ObjectParameter = If(iCPOsoba IsNot Nothing, New ObjectParameter("ICPOsoba", iCPOsoba), New ObjectParameter("ICPOsoba", GetType(String)))

        Dim iCPAdresaParameter As ObjectParameter = If(iCPAdresa IsNot Nothing, New ObjectParameter("ICPAdresa", iCPAdresa), New ObjectParameter("ICPAdresa", GetType(String)))

        Dim iCPNazev1Parameter As ObjectParameter = If(iCPNazev1 IsNot Nothing, New ObjectParameter("ICPNazev1", iCPNazev1), New ObjectParameter("ICPNazev1", GetType(String)))

        Dim iCPNazev2Parameter As ObjectParameter = If(iCPNazev2 IsNot Nothing, New ObjectParameter("ICPNazev2", iCPNazev2), New ObjectParameter("ICPNazev2", GetType(String)))

        Dim iCPOdbornostParameter As ObjectParameter = If(iCPOdbornost IsNot Nothing, New ObjectParameter("ICPOdbornost", iCPOdbornost), New ObjectParameter("ICPOdbornost", GetType(String)))

        Dim jednatelParameter As ObjectParameter = If(jednatel IsNot Nothing, New ObjectParameter("Jednatel", jednatel), New ObjectParameter("Jednatel", GetType(String)))

        Dim kontaktTelefonParameter As ObjectParameter = If(kontaktTelefon IsNot Nothing, New ObjectParameter("KontaktTelefon", kontaktTelefon), New ObjectParameter("KontaktTelefon", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_IUFirma", iDFirmyParameter, iDKnihyParameter, firmaNazevParameter, uliceParameter, pSCParameter, mestoParameter, iCOParameter, dICParameter, emailProObjednavkyParameter, emailProFakturaciParameter, uzNepouzivatParameter, odberatelParameter, dodavatelParameter, kategorieParameter, poznParameter, iDUserUpravilParameter, casVytvorilParameter, casUpravilParameter, zapisORParameter, iCPParameter, iCPOsobaParameter, iCPAdresaParameter, iCPNazev1Parameter, iCPNazev2Parameter, iCPOdbornostParameter, jednatelParameter, kontaktTelefonParameter, lL_LastLapse, newIDFirmy)
    End Function

    Public Overridable Function AGsp_Get_FirmySeznam(iDKnihy As Nullable(Of Integer), hledej As String) As ObjectResult(Of AGsp_Get_FirmySeznam_Result)
        Dim iDKnihyParameter As ObjectParameter = If(iDKnihy.HasValue, New ObjectParameter("IDKnihy", iDKnihy), New ObjectParameter("IDKnihy", GetType(Integer)))

        Dim hledejParameter As ObjectParameter = If(hledej IsNot Nothing, New ObjectParameter("Hledej", hledej), New ObjectParameter("Hledej", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_FirmySeznam_Result)("AGsp_Get_FirmySeznam", iDKnihyParameter, hledejParameter)
    End Function

    Public Overridable Function AGsp_Do_IHistory(iDBackupProfile As Nullable(Of Integer), iDUserUpravil As Nullable(Of Integer), predmet As String, txt As String) As Integer
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Dim iDUserUpravilParameter As ObjectParameter = If(iDUserUpravil.HasValue, New ObjectParameter("IDUserUpravil", iDUserUpravil), New ObjectParameter("IDUserUpravil", GetType(Integer)))

        Dim predmetParameter As ObjectParameter = If(predmet IsNot Nothing, New ObjectParameter("Predmet", predmet), New ObjectParameter("Predmet", GetType(String)))

        Dim txtParameter As ObjectParameter = If(txt IsNot Nothing, New ObjectParameter("Txt", txt), New ObjectParameter("Txt", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Do_IHistory", iDBackupProfileParameter, iDUserUpravilParameter, predmetParameter, txtParameter)
    End Function

    Public Overridable Function AGsp_Get_Historie(iDBackupProfile As Nullable(Of Integer)) As ObjectResult(Of AGsp_Get_Historie_Result)
        Dim iDBackupProfileParameter As ObjectParameter = If(iDBackupProfile.HasValue, New ObjectParameter("IDBackupProfile", iDBackupProfile), New ObjectParameter("IDBackupProfile", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of AGsp_Get_Historie_Result)("AGsp_Get_Historie", iDBackupProfileParameter)
    End Function

    Public Overridable Function AGsp_Get_JakeChybiDopravne(iDVykazPrace As Nullable(Of Integer), rr_JakeChybiDopravne As ObjectParameter) As Integer
        Dim iDVykazPraceParameter As ObjectParameter = If(iDVykazPrace.HasValue, New ObjectParameter("IDVykazPrace", iDVykazPrace), New ObjectParameter("IDVykazPrace", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_Get_JakeChybiDopravne", iDVykazPraceParameter, rr_JakeChybiDopravne)
    End Function

End Class
